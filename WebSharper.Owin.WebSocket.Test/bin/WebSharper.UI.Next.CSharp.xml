<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>WebSharper.UI.Next.CSharp</name></assembly>
<members>
<member name="M:WebSharper.UI.Next.CSharp.DocExtension.DocSeqCached``3(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1},System.Func{``1,WebSharper.UI.Next.View{``0},``2})">
<summary>
 DocSeqCached with a custom key.
 Shorthand for Doc.BindSeqCachedViewBy.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.DocExtension.DocSeqCached``2(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},System.Func{WebSharper.UI.Next.View{``0},``1})">
<summary>
 Converts a collection to Doc using View.MapSeqCachedView and embeds the concatenated result.
 Shorthand for Doc.BindSeqCachedView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.DocExtension.DocSeqCached``3(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1},System.Func{``0,``2})">
<summary>
 DocSeqCached with a custom key.
 Shorthand for Doc.BindSeqCachedBy.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.DocExtension.DocSeqCached``2(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``1})">
<summary>
 Converts a collection to Doc using View.MapSeqCached and embeds the concatenated result.
 Shorthand for Doc.BindSeqCached.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.DocExtension.Doc``1(WebSharper.UI.Next.View{``0},System.Func{``0,WebSharper.UI.Next.Doc})">
<summary>
 Embeds time-varying fragments.
 Equivalent to Doc.BindView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.TransExtensions.CanAnimateExit``1(WebSharper.UI.Next.Trans{``0})">
<summary>
 Whether AnimateExit results are non-trivial.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.TransExtensions.CanAnimateEnter``1(WebSharper.UI.Next.Trans{``0})">
<summary>
 Whether AnimateEnter results are non-trivial.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.TransExtensions.CanAnimateChange``1(WebSharper.UI.Next.Trans{``0})">
<summary>
 Whether AnimateChange results are non-trivial.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.TransExtensions.AnimateExit``1(WebSharper.UI.Next.Trans{``0},``0)">
<summary>
 Animates removing an object - from a given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.TransExtensions.AnimateEnter``1(WebSharper.UI.Next.Trans{``0},``0)">
<summary>
 Animates adding an object - towards a given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.TransExtensions.AnimateChange``1(WebSharper.UI.Next.Trans{``0},``0,``0)">
<summary>
 Animates a change in an object, between values.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.AnimationExtensions.WhenDone(WebSharper.UI.Next.Anim,System.Func{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
<summary>
 Attach a finalizer action to an animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.AnimationExtensions.Pack(WebSharper.UI.Next.Anim{Microsoft.FSharp.Core.Unit})">
<summary>
 Constructs a singleton animation set.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.AnimationExtensions.Map``2(WebSharper.UI.Next.Anim{``0},System.Func{``0,``1})">
<summary>
 Maps over an animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.AnimationExtensions.Concat(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Anim})">
<summary>
 Combining many animations.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.AnimationExtensions.Append(WebSharper.UI.Next.Anim,WebSharper.UI.Next.Anim)">
<summary>
 Combining two animations.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.FlowExtensions.Map``2(WebSharper.UI.Next.Flow{``0},System.Func{``0,``1})">
<summary>
 Mapping.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.FlowExtensions.Embed``1(WebSharper.UI.Next.Flow{``0})">
<summary>
 Embeds a flow into a document, ignoring the result.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.FlowExtensions.Bind``2(WebSharper.UI.Next.Flow{``0},System.Func{``0,WebSharper.UI.Next.Flow{``1}})">
<summary>
 Monadic composition: compose two flows, allowing the
 result of one to be used to determine future ones.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.wbr(System.Object[])">
<summary>
 Create an HTML element &lt;wbr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.video(System.Object[])">
<summary>
 Create an HTML element &lt;video&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.ul(System.Object[])">
<summary>
 Create an HTML element &lt;ul&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.track(System.Object[])">
<summary>
 Create an HTML element &lt;track&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.tr(System.Object[])">
<summary>
 Create an HTML element &lt;tr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.time(System.Object[])">
<summary>
 Create an HTML element &lt;time&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.thead(System.Object[])">
<summary>
 Create an HTML element &lt;thead&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.th(System.Object[])">
<summary>
 Create an HTML element &lt;th&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.tfoot(System.Object[])">
<summary>
 Create an HTML element &lt;tfoot&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.textarea(System.Object[])">
<summary>
 Create an HTML element &lt;textarea&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.td(System.Object[])">
<summary>
 Create an HTML element &lt;td&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.tbody(System.Object[])">
<summary>
 Create an HTML element &lt;tbody&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.table(System.Object[])">
<summary>
 Create an HTML element &lt;table&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.sup(System.Object[])">
<summary>
 Create an HTML element &lt;sup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.summary(System.Object[])">
<summary>
 Create an HTML element &lt;summary&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.sub(System.Object[])">
<summary>
 Create an HTML element &lt;sub&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.strong(System.Object[])">
<summary>
 Create an HTML element &lt;strong&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.span(System.Object[])">
<summary>
 Create an HTML element &lt;span&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.source(System.Object[])">
<summary>
 Create an HTML element &lt;source&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.small(System.Object[])">
<summary>
 Create an HTML element &lt;small&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.shadow(System.Object[])">
<summary>
 Create an HTML element &lt;shadow&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.select(System.Object[])">
<summary>
 Create an HTML element &lt;select&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.section(System.Object[])">
<summary>
 Create an HTML element &lt;section&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.script(System.Object[])">
<summary>
 Create an HTML element &lt;script&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.samp(System.Object[])">
<summary>
 Create an HTML element &lt;samp&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.ruby(System.Object[])">
<summary>
 Create an HTML element &lt;ruby&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.rtc(System.Object[])">
<summary>
 Create an HTML element &lt;rtc&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.rt(System.Object[])">
<summary>
 Create an HTML element &lt;rt&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.rp(System.Object[])">
<summary>
 Create an HTML element &lt;rp&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.q(System.Object[])">
<summary>
 Create an HTML element &lt;q&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.progress(System.Object[])">
<summary>
 Create an HTML element &lt;progress&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.pre(System.Object[])">
<summary>
 Create an HTML element &lt;pre&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.picture(System.Object[])">
<summary>
 Create an HTML element &lt;picture&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.param(System.Object[])">
<summary>
 Create an HTML element &lt;param&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.p(System.Object[])">
<summary>
 Create an HTML element &lt;p&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.output(System.Object[])">
<summary>
 Create an HTML element &lt;output&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.optgroup(System.Object[])">
<summary>
 Create an HTML element &lt;optgroup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.ol(System.Object[])">
<summary>
 Create an HTML element &lt;ol&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.noscript(System.Object[])">
<summary>
 Create an HTML element &lt;noscript&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.noframes(System.Object[])">
<summary>
 Create an HTML element &lt;noframes&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.nav(System.Object[])">
<summary>
 Create an HTML element &lt;nav&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.meter(System.Object[])">
<summary>
 Create an HTML element &lt;meter&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.meta(System.Object[])">
<summary>
 Create an HTML element &lt;meta&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.mark(System.Object[])">
<summary>
 Create an HTML element &lt;mark&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.link(System.Object[])">
<summary>
 Create an HTML element &lt;link&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.li(System.Object[])">
<summary>
 Create an HTML element &lt;li&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.legend(System.Object[])">
<summary>
 Create an HTML element &lt;legend&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.label(System.Object[])">
<summary>
 Create an HTML element &lt;label&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.keygen(System.Object[])">
<summary>
 Create an HTML element &lt;keygen&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.kbd(System.Object[])">
<summary>
 Create an HTML element &lt;kbd&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.ins(System.Object[])">
<summary>
 Create an HTML element &lt;ins&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.input(System.Object[])">
<summary>
 Create an HTML element &lt;input&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.img(System.Object[])">
<summary>
 Create an HTML element &lt;img&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.iframe(System.Object[])">
<summary>
 Create an HTML element &lt;iframe&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.i(System.Object[])">
<summary>
 Create an HTML element &lt;i&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.html(System.Object[])">
<summary>
 Create an HTML element &lt;html&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.hr(System.Object[])">
<summary>
 Create an HTML element &lt;hr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.hgroup(System.Object[])">
<summary>
 Create an HTML element &lt;hgroup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.header(System.Object[])">
<summary>
 Create an HTML element &lt;header&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.head(System.Object[])">
<summary>
 Create an HTML element &lt;head&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.h6(System.Object[])">
<summary>
 Create an HTML element &lt;h6&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.h5(System.Object[])">
<summary>
 Create an HTML element &lt;h5&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.h4(System.Object[])">
<summary>
 Create an HTML element &lt;h4&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.h3(System.Object[])">
<summary>
 Create an HTML element &lt;h3&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.h2(System.Object[])">
<summary>
 Create an HTML element &lt;h2&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.h1(System.Object[])">
<summary>
 Create an HTML element &lt;h1&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.form(System.Object[])">
<summary>
 Create an HTML element &lt;form&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.footer(System.Object[])">
<summary>
 Create an HTML element &lt;footer&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.figure(System.Object[])">
<summary>
 Create an HTML element &lt;figure&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.figcaption(System.Object[])">
<summary>
 Create an HTML element &lt;figcaption&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.fieldset(System.Object[])">
<summary>
 Create an HTML element &lt;fieldset&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.embed(System.Object[])">
<summary>
 Create an HTML element &lt;embed&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.em(System.Object[])">
<summary>
 Create an HTML element &lt;em&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.dt(System.Object[])">
<summary>
 Create an HTML element &lt;dt&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.dl(System.Object[])">
<summary>
 Create an HTML element &lt;dl&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.div(System.Object[])">
<summary>
 Create an HTML element &lt;div&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.dfn(System.Object[])">
<summary>
 Create an HTML element &lt;dfn&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.details(System.Object[])">
<summary>
 Create an HTML element &lt;details&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.del(System.Object[])">
<summary>
 Create an HTML element &lt;del&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.dd(System.Object[])">
<summary>
 Create an HTML element &lt;dd&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.datalist(System.Object[])">
<summary>
 Create an HTML element &lt;datalist&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.command(System.Object[])">
<summary>
 Create an HTML element &lt;command&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.colgroup(System.Object[])">
<summary>
 Create an HTML element &lt;colgroup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.col(System.Object[])">
<summary>
 Create an HTML element &lt;col&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.code(System.Object[])">
<summary>
 Create an HTML element &lt;code&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.cite(System.Object[])">
<summary>
 Create an HTML element &lt;cite&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.caption(System.Object[])">
<summary>
 Create an HTML element &lt;caption&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.canvas(System.Object[])">
<summary>
 Create an HTML element &lt;canvas&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.button(System.Object[])">
<summary>
 Create an HTML element &lt;button&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.br(System.Object[])">
<summary>
 Create an HTML element &lt;br&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.body(System.Object[])">
<summary>
 Create an HTML element &lt;body&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.blockquote(System.Object[])">
<summary>
 Create an HTML element &lt;blockquote&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.bdo(System.Object[])">
<summary>
 Create an HTML element &lt;bdo&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.bdi(System.Object[])">
<summary>
 Create an HTML element &lt;bdi&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.base(System.Object[])">
<summary>
 Create an HTML element &lt;base&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.b(System.Object[])">
<summary>
 Create an HTML element &lt;b&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.audio(System.Object[])">
<summary>
 Create an HTML element &lt;audio&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.aside(System.Object[])">
<summary>
 Create an HTML element &lt;aside&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.article(System.Object[])">
<summary>
 Create an HTML element &lt;article&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.area(System.Object[])">
<summary>
 Create an HTML element &lt;area&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.address(System.Object[])">
<summary>
 Create an HTML element &lt;address&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.abbr(System.Object[])">
<summary>
 Create an HTML element &lt;abbr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.a(System.Object[])">
<summary>
 Create an HTML element &lt;a&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.doc(System.Object[])">
<summary>
 Concatenate Docs.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.client(System.Linq.Expressions.Expression{System.Func{WebSharper.IControlBody}})">
<summary>
 Insert a client-side Doc.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.textView(WebSharper.UI.Next.View{System.String})">
<summary>
 Create a text node with dynamic content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.text(System.String)">
<summary>
 Create a text node with constant content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.z(System.String)">
<summary>
 Create an SVG attribute &quot;z&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.yChannelSelector(System.String)">
<summary>
 Create an SVG attribute &quot;yChannelSelector&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.y2(System.String)">
<summary>
 Create an SVG attribute &quot;y2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.y1(System.String)">
<summary>
 Create an SVG attribute &quot;y1&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.y(System.String)">
<summary>
 Create an SVG attribute &quot;y&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.xChannelSelector(System.String)">
<summary>
 Create an SVG attribute &quot;xChannelSelector&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.x2(System.String)">
<summary>
 Create an SVG attribute &quot;x2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.x1(System.String)">
<summary>
 Create an SVG attribute &quot;x1&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.x(System.String)">
<summary>
 Create an SVG attribute &quot;x&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.writingMode(System.String)">
<summary>
 Create an SVG attribute &quot;writing-mode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.wordSpacing(System.String)">
<summary>
 Create an SVG attribute &quot;word-spacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.width(System.String)">
<summary>
 Create an SVG attribute &quot;width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.visibility(System.String)">
<summary>
 Create an SVG attribute &quot;visibility&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.viewBox(System.String)">
<summary>
 Create an SVG attribute &quot;viewBox&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.values(System.String)">
<summary>
 Create an SVG attribute &quot;values&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.type(System.String)">
<summary>
 Create an SVG attribute &quot;type&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.transform(System.String)">
<summary>
 Create an SVG attribute &quot;transform&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.to(System.String)">
<summary>
 Create an SVG attribute &quot;to&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.textRendering(System.String)">
<summary>
 Create an SVG attribute &quot;text-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.textDecoration(System.String)">
<summary>
 Create an SVG attribute &quot;text-decoration&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.textAnchor(System.String)">
<summary>
 Create an SVG attribute &quot;text-anchor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.targetY(System.String)">
<summary>
 Create an SVG attribute &quot;targetY&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.targetX(System.String)">
<summary>
 Create an SVG attribute &quot;targetX&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.surfaceScale(System.String)">
<summary>
 Create an SVG attribute &quot;surfaceScale&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.style(System.String)">
<summary>
 Create an SVG attribute &quot;style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeWidth(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeMiterlimit(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-miterlimit&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeLinejoin(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-linejoin&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeLinecap(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-linecap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeDashoffset(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-dashoffset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.strokeDasharray(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-dasharray&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.stroke(System.String)">
<summary>
 Create an SVG attribute &quot;stroke&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.stopOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;stop-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.stopColor(System.String)">
<summary>
 Create an SVG attribute &quot;stop-color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.stitchTiles(System.String)">
<summary>
 Create an SVG attribute &quot;stitchTiles&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.stdDeviation(System.String)">
<summary>
 Create an SVG attribute &quot;stdDeviation&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.specularExponent(System.String)">
<summary>
 Create an SVG attribute &quot;specularExponent&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.specularConstant(System.String)">
<summary>
 Create an SVG attribute &quot;specularConstant&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.shapeRendering(System.String)">
<summary>
 Create an SVG attribute &quot;shape-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.seed(System.String)">
<summary>
 Create an SVG attribute &quot;seed&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.scale(System.String)">
<summary>
 Create an SVG attribute &quot;scale&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.ry(System.String)">
<summary>
 Create an SVG attribute &quot;ry&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.rx(System.String)">
<summary>
 Create an SVG attribute &quot;rx&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.result(System.String)">
<summary>
 Create an SVG attribute &quot;result&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.restart(System.String)">
<summary>
 Create an SVG attribute &quot;restart&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.requiredFeatures(System.String)">
<summary>
 Create an SVG attribute &quot;requiredFeatures&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.repeatDur(System.String)">
<summary>
 Create an SVG attribute &quot;repeatDur&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.repeatCount(System.String)">
<summary>
 Create an SVG attribute &quot;repeatCount&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.radius(System.String)">
<summary>
 Create an SVG attribute &quot;radius&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.r(System.String)">
<summary>
 Create an SVG attribute &quot;r&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.primitiveUnits(System.String)">
<summary>
 Create an SVG attribute &quot;primitiveUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.preserveAspectRatio(System.String)">
<summary>
 Create an SVG attribute &quot;preserveAspectRatio&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.preserveAlpha(System.String)">
<summary>
 Create an SVG attribute &quot;preserveAlpha&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.pointsAtZ(System.String)">
<summary>
 Create an SVG attribute &quot;pointsAtZ&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.pointsAtY(System.String)">
<summary>
 Create an SVG attribute &quot;pointsAtY&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.pointsAtX(System.String)">
<summary>
 Create an SVG attribute &quot;pointsAtX&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.points(System.String)">
<summary>
 Create an SVG attribute &quot;points&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.pointerEvents(System.String)">
<summary>
 Create an SVG attribute &quot;pointer-events&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.patternUnits(System.String)">
<summary>
 Create an SVG attribute &quot;patternUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.patternTransform(System.String)">
<summary>
 Create an SVG attribute &quot;patternTransform&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.patternContentUnits(System.String)">
<summary>
 Create an SVG attribute &quot;patternContentUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.pathLength(System.String)">
<summary>
 Create an SVG attribute &quot;pathLength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.paintOrder(System.String)">
<summary>
 Create an SVG attribute &quot;paint-order&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.overflow(System.String)">
<summary>
 Create an SVG attribute &quot;overflow&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.order(System.String)">
<summary>
 Create an SVG attribute &quot;order&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.operator(System.String)">
<summary>
 Create an SVG attribute &quot;operator&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.opacity(System.String)">
<summary>
 Create an SVG attribute &quot;opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.numOctaves(System.String)">
<summary>
 Create an SVG attribute &quot;numOctaves&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.mode(System.String)">
<summary>
 Create an SVG attribute &quot;mode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.min(System.String)">
<summary>
 Create an SVG attribute &quot;min&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.max(System.String)">
<summary>
 Create an SVG attribute &quot;max&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.maskUnits(System.String)">
<summary>
 Create an SVG attribute &quot;maskUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.maskContentUnits(System.String)">
<summary>
 Create an SVG attribute &quot;maskContentUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.mask(System.String)">
<summary>
 Create an SVG attribute &quot;mask&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.markerWidth(System.String)">
<summary>
 Create an SVG attribute &quot;markerWidth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.markerUnits(System.String)">
<summary>
 Create an SVG attribute &quot;markerUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.markerStart(System.String)">
<summary>
 Create an SVG attribute &quot;marker-start&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.markerMid(System.String)">
<summary>
 Create an SVG attribute &quot;marker-mid&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.markerHeight(System.String)">
<summary>
 Create an SVG attribute &quot;markerHeight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.markerEnd(System.String)">
<summary>
 Create an SVG attribute &quot;marker-end&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.local(System.String)">
<summary>
 Create an SVG attribute &quot;local&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.limitingConeAngle(System.String)">
<summary>
 Create an SVG attribute &quot;limitingConeAngle&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.lightingColor(System.String)">
<summary>
 Create an SVG attribute &quot;lighting-color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.letterSpacing(System.String)">
<summary>
 Create an SVG attribute &quot;letter-spacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.keyTimes(System.String)">
<summary>
 Create an SVG attribute &quot;keyTimes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.keySplines(System.String)">
<summary>
 Create an SVG attribute &quot;keySplines&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.kerning(System.String)">
<summary>
 Create an SVG attribute &quot;kerning&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.kernelUnitLength(System.String)">
<summary>
 Create an SVG attribute &quot;kernelUnitLength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.kernelMatrix(System.String)">
<summary>
 Create an SVG attribute &quot;kernelMatrix&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.k4(System.String)">
<summary>
 Create an SVG attribute &quot;k4&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.k3(System.String)">
<summary>
 Create an SVG attribute &quot;k3&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.k2(System.String)">
<summary>
 Create an SVG attribute &quot;k2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.k1(System.String)">
<summary>
 Create an SVG attribute &quot;k1&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.in2(System.String)">
<summary>
 Create an SVG attribute &quot;in2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.in(System.String)">
<summary>
 Create an SVG attribute &quot;in&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.imageRendering(System.String)">
<summary>
 Create an SVG attribute &quot;image-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.height(System.String)">
<summary>
 Create an SVG attribute &quot;height&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.gradientUnits(System.String)">
<summary>
 Create an SVG attribute &quot;gradientUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.gradientTransform(System.String)">
<summary>
 Create an SVG attribute &quot;gradientTransform&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.from(System.String)">
<summary>
 Create an SVG attribute &quot;from&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontWeight(System.String)">
<summary>
 Create an SVG attribute &quot;font-weight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontVariant(System.String)">
<summary>
 Create an SVG attribute &quot;font-variant&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontStyle(System.String)">
<summary>
 Create an SVG attribute &quot;font-style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontStretch(System.String)">
<summary>
 Create an SVG attribute &quot;font-stretch&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontSizeAdjust(System.String)">
<summary>
 Create an SVG attribute &quot;font-size-adjust&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontSize(System.String)">
<summary>
 Create an SVG attribute &quot;font-size&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fontFamily(System.String)">
<summary>
 Create an SVG attribute &quot;font-family&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.floodOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;flood-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.floodColor(System.String)">
<summary>
 Create an SVG attribute &quot;flood-color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.filterUnits(System.String)">
<summary>
 Create an SVG attribute &quot;filterUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.filterRes(System.String)">
<summary>
 Create an SVG attribute &quot;filterRes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.filter(System.String)">
<summary>
 Create an SVG attribute &quot;filter&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fillRule(System.String)">
<summary>
 Create an SVG attribute &quot;fill-rule&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fillOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;fill-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.fill(System.String)">
<summary>
 Create an SVG attribute &quot;fill&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.externalResourcesRequired(System.String)">
<summary>
 Create an SVG attribute &quot;externalResourcesRequired&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.end(System.String)">
<summary>
 Create an SVG attribute &quot;end&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.elevation(System.String)">
<summary>
 Create an SVG attribute &quot;elevation&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.edgeMode(System.String)">
<summary>
 Create an SVG attribute &quot;edgeMode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.dy(System.String)">
<summary>
 Create an SVG attribute &quot;dy&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.dx(System.String)">
<summary>
 Create an SVG attribute &quot;dx&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.dur(System.String)">
<summary>
 Create an SVG attribute &quot;dur&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.dominantBaseline(System.String)">
<summary>
 Create an SVG attribute &quot;dominant-baseline&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.divisor(System.String)">
<summary>
 Create an SVG attribute &quot;divisor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.display(System.String)">
<summary>
 Create an SVG attribute &quot;display&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.direction(System.String)">
<summary>
 Create an SVG attribute &quot;direction&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.diffuseConstant(System.String)">
<summary>
 Create an SVG attribute &quot;diffuseConstant&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.d(System.String)">
<summary>
 Create an SVG attribute &quot;d&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.cy(System.String)">
<summary>
 Create an SVG attribute &quot;cy&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.cx(System.String)">
<summary>
 Create an SVG attribute &quot;cx&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.cursor(System.String)">
<summary>
 Create an SVG attribute &quot;cursor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.contentStyleType(System.String)">
<summary>
 Create an SVG attribute &quot;contentStyleType&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.contentScriptType(System.String)">
<summary>
 Create an SVG attribute &quot;contentScriptType&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.colorRendering(System.String)">
<summary>
 Create an SVG attribute &quot;color-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.colorProfile(System.String)">
<summary>
 Create an SVG attribute &quot;color-profile&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.colorInterpolationFilters(System.String)">
<summary>
 Create an SVG attribute &quot;color-interpolation-filters&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.colorInterpolation(System.String)">
<summary>
 Create an SVG attribute &quot;color-interpolation&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.color(System.String)">
<summary>
 Create an SVG attribute &quot;color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.clipRule(System.String)">
<summary>
 Create an SVG attribute &quot;clip-rule&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.clipPathUnits(System.String)">
<summary>
 Create an SVG attribute &quot;clipPathUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.clipPath(System.String)">
<summary>
 Create an SVG attribute &quot;clip-path&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.clip(System.String)">
<summary>
 Create an SVG attribute &quot;clip&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.class(System.String)">
<summary>
 Create an SVG attribute &quot;class&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.calcMode(System.String)">
<summary>
 Create an SVG attribute &quot;calcMode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.bias(System.String)">
<summary>
 Create an SVG attribute &quot;bias&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.begin(System.String)">
<summary>
 Create an SVG attribute &quot;begin&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.baselineShift(System.String)">
<summary>
 Create an SVG attribute &quot;baseline-shift&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.baseFrequency(System.String)">
<summary>
 Create an SVG attribute &quot;baseFrequency&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.azimuth(System.String)">
<summary>
 Create an SVG attribute &quot;azimuth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.attributeType(System.String)">
<summary>
 Create an SVG attribute &quot;attributeType&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.attributeName(System.String)">
<summary>
 Create an SVG attribute &quot;attributeName&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.ascent(System.String)">
<summary>
 Create an SVG attribute &quot;ascent&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.alignmentBaseline(System.String)">
<summary>
 Create an SVG attribute &quot;alignment-baseline&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.additive(System.String)">
<summary>
 Create an SVG attribute &quot;additive&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.accumulate(System.String)">
<summary>
 Create an SVG attribute &quot;accumulate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgAttributes.accentHeight(System.String)">
<summary>
 Create an SVG attribute &quot;accent-height&quot; with the given value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.CSharp.Html.SvgAttributes">
<summary>
 SVG attributes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.wheel(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.WheelEvent}})">
<summary>
 Add a handler for the event &quot;wheel&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.waiting(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;waiting&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.volumeChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;volumechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.visibilityChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.versionChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;versionchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.userProximity(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;userproximity&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.upgradeNeeded(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.updateReady(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;updateready&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.unload(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;unload&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.transitionEnd(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;transitionend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.touchStart(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.touchMove(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchmove&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.touchLeave(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchleave&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.touchEnter(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchenter&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.touchEnd(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.touchCancel(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchcancel&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.timeUpdate(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;timeupdate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.timeOut(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;timeout&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGZoom(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGUnload(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGScroll(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGResize(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGResize&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGLoad(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGError(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGError&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.SVGAbort(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.suspend(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;suspend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.success(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;success&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.submit(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;submit&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.storage(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;storage&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.stalled(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;stalled&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.show(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;show&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.select(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;select&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.seeking(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;seeking&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.seeked(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;seeked&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.scroll(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;scroll&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.resize(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;resize&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.reset(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;reset&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.repeatEvent(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.readyStateChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;readystatechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.rateChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;ratechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.progress(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;progress&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.popState(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;popstate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.pointerLockError(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.pointerLockChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.playing(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;playing&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.play(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;play&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.pause(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pause&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.paste(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;paste&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.pageShow(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pageshow&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.pageHide(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pagehide&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.orientationChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;orientationchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.open(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;open&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.online(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;online&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.offline(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;offline&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.obsolete(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;obsolete&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.noUpdate(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;noupdate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseUp(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseup&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseOver(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseover&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseOut(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseout&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseMove(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mousemove&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseLeave(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseleave&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseEnter(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseenter&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.mouseDown(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mousedown&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.message(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;message&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.loadStart(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.loadEnd(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.loadedMetadata(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.loadedData(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadeddata&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.load(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;load&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.levelChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;levelchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.languageChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;languagechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.keyUp(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent}})">
<summary>
 Add a handler for the event &quot;keyup&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.keyPress(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent}})">
<summary>
 Add a handler for the event &quot;keypress&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.keyDown(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent}})">
<summary>
 Add a handler for the event &quot;keydown&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.invalid(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;invalid&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.input(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;input&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.hashChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;hashchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.gamepadDisconnected(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.gamepadConnected(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.fullScreenError(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.fullScreenChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.focus(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent}})">
<summary>
 Add a handler for the event &quot;focus&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.error(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;error&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.endEvent(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;endEvent&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.ended(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;ended&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.emptied(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;emptied&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.durationChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;durationchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.drop(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;drop&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dragStart(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dragOver(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragover&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dragLeave(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragleave&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dragEnter(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragenter&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dragEnd(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.drag(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;drag&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.downloading(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;downloading&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMSubtreeModified(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMNodeRemovedFromDocument(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMNodeRemoved(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMNodeInsertedIntoDocument(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMNodeInserted(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMElementNameChanged(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMContentLoaded(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMCharacterDataModified(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMAttrModified(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMAttributeNameChanged(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.DOMActivate(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dischargingTimeChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.deviceProximity(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.deviceOrientation(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.deviceMotion(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;devicemotion&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.deviceLight(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;devicelight&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.dblClick(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;dblclick&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.cut(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;cut&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.copy(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;copy&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.contextMenu(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;contextmenu&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.compositionUpdate(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent}})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.compositionStart(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent}})">
<summary>
 Add a handler for the event &quot;compositionstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.compositionEnd(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent}})">
<summary>
 Add a handler for the event &quot;compositionend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.complete(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;complete&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.close(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;close&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.click(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;click&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.checking(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;checking&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.chargingTimeChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.chargingChange(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;chargingchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.change(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;change&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.canPlayThrough(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.canPlay(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;canplay&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.cached(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;cached&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.blur(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent}})">
<summary>
 Add a handler for the event &quot;blur&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.blocked(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;blocked&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.beginEvent(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;beginEvent&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.beforeUnload(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;beforeunload&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.beforePrint(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;beforeprint&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.audioProcess(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;audioprocess&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.animationStart(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;animationstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.animationIteration(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;animationiteration&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.animationEnd(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;animationend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.afterPrint(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;afterprint&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.on.abort(System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;abort&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.wrap(System.String)">
<summary>
 Create an HTML attribute &quot;wrap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.width(System.String)">
<summary>
 Create an HTML attribute &quot;width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.vspace(System.String)">
<summary>
 Create an HTML attribute &quot;vspace&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.vlink(System.String)">
<summary>
 Create an HTML attribute &quot;vlink&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.version(System.String)">
<summary>
 Create an HTML attribute &quot;version&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.valuetype(System.String)">
<summary>
 Create an HTML attribute &quot;valuetype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.value(System.String)">
<summary>
 Create an HTML attribute &quot;value&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.valign(System.String)">
<summary>
 Create an HTML attribute &quot;valign&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.usemap(System.String)">
<summary>
 Create an HTML attribute &quot;usemap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.type(System.String)">
<summary>
 Create an HTML attribute &quot;type&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.title(System.String)">
<summary>
 Create an HTML attribute &quot;title&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.text(System.String)">
<summary>
 Create an HTML attribute &quot;text&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.target(System.String)">
<summary>
 Create an HTML attribute &quot;target&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.tabindex(System.String)">
<summary>
 Create an HTML attribute &quot;tabindex&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.summary(System.String)">
<summary>
 Create an HTML attribute &quot;summary&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.subject(System.String)">
<summary>
 Create an HTML attribute &quot;subject&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.style(System.String)">
<summary>
 Create an HTML attribute &quot;style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.step(System.String)">
<summary>
 Create an HTML attribute &quot;step&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.start(System.String)">
<summary>
 Create an HTML attribute &quot;start&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.standby(System.String)">
<summary>
 Create an HTML attribute &quot;standby&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.srclang(System.String)">
<summary>
 Create an HTML attribute &quot;srclang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.srcdoc(System.String)">
<summary>
 Create an HTML attribute &quot;srcdoc&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.src(System.String)">
<summary>
 Create an HTML attribute &quot;src&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.spellcheck(System.String)">
<summary>
 Create an HTML attribute &quot;spellcheck&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.span(System.String)">
<summary>
 Create an HTML attribute &quot;span&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.sizes(System.String)">
<summary>
 Create an HTML attribute &quot;sizes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.size(System.String)">
<summary>
 Create an HTML attribute &quot;size&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.shape(System.String)">
<summary>
 Create an HTML attribute &quot;shape&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.selected(System.String)">
<summary>
 Create an HTML attribute &quot;selected&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.seamless(System.String)">
<summary>
 Create an HTML attribute &quot;seamless&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.scrolling(System.String)">
<summary>
 Create an HTML attribute &quot;scrolling&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.scoped(System.String)">
<summary>
 Create an HTML attribute &quot;scoped&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.scope(System.String)">
<summary>
 Create an HTML attribute &quot;scope&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.scheme(System.String)">
<summary>
 Create an HTML attribute &quot;scheme&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.sandbox(System.String)">
<summary>
 Create an HTML attribute &quot;sandbox&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.rules(System.String)">
<summary>
 Create an HTML attribute &quot;rules&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.rowspan(System.String)">
<summary>
 Create an HTML attribute &quot;rowspan&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.rows(System.String)">
<summary>
 Create an HTML attribute &quot;rows&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.reversed(System.String)">
<summary>
 Create an HTML attribute &quot;reversed&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.rev(System.String)">
<summary>
 Create an HTML attribute &quot;rev&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.required(System.String)">
<summary>
 Create an HTML attribute &quot;required&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.rel(System.String)">
<summary>
 Create an HTML attribute &quot;rel&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.readonly(System.String)">
<summary>
 Create an HTML attribute &quot;readonly&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.radiogroup(System.String)">
<summary>
 Create an HTML attribute &quot;radiogroup&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.pubdate(System.String)">
<summary>
 Create an HTML attribute &quot;pubdate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.prompt(System.String)">
<summary>
 Create an HTML attribute &quot;prompt&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.profile(System.String)">
<summary>
 Create an HTML attribute &quot;profile&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.preload(System.String)">
<summary>
 Create an HTML attribute &quot;preload&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.poster(System.String)">
<summary>
 Create an HTML attribute &quot;poster&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.placeholder(System.String)">
<summary>
 Create an HTML attribute &quot;placeholder&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.ping(System.String)">
<summary>
 Create an HTML attribute &quot;ping&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.pattern(System.String)">
<summary>
 Create an HTML attribute &quot;pattern&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.optimum(System.String)">
<summary>
 Create an HTML attribute &quot;optimum&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.open(System.String)">
<summary>
 Create an HTML attribute &quot;open&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.object(System.String)">
<summary>
 Create an HTML attribute &quot;object&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.nowrap(System.String)">
<summary>
 Create an HTML attribute &quot;nowrap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.novalidate(System.String)">
<summary>
 Create an HTML attribute &quot;novalidate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.noshade(System.String)">
<summary>
 Create an HTML attribute &quot;noshade&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.noresize(System.String)">
<summary>
 Create an HTML attribute &quot;noresize&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.nohref(System.String)">
<summary>
 Create an HTML attribute &quot;nohref&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.name(System.String)">
<summary>
 Create an HTML attribute &quot;name&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.multiple(System.String)">
<summary>
 Create an HTML attribute &quot;multiple&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.min(System.String)">
<summary>
 Create an HTML attribute &quot;min&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.method(System.String)">
<summary>
 Create an HTML attribute &quot;method&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.media(System.String)">
<summary>
 Create an HTML attribute &quot;media&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.maxlength(System.String)">
<summary>
 Create an HTML attribute &quot;maxlength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.max(System.String)">
<summary>
 Create an HTML attribute &quot;max&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.marginwidth(System.String)">
<summary>
 Create an HTML attribute &quot;marginwidth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.marginheight(System.String)">
<summary>
 Create an HTML attribute &quot;marginheight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.manifest(System.String)">
<summary>
 Create an HTML attribute &quot;manifest&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.low(System.String)">
<summary>
 Create an HTML attribute &quot;low&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.loop(System.String)">
<summary>
 Create an HTML attribute &quot;loop&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.longdesc(System.String)">
<summary>
 Create an HTML attribute &quot;longdesc&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.list(System.String)">
<summary>
 Create an HTML attribute &quot;list&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.link(System.String)">
<summary>
 Create an HTML attribute &quot;link&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.language(System.String)">
<summary>
 Create an HTML attribute &quot;language&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.lang(System.String)">
<summary>
 Create an HTML attribute &quot;lang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.label(System.String)">
<summary>
 Create an HTML attribute &quot;label&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.kind(System.String)">
<summary>
 Create an HTML attribute &quot;kind&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.keytype(System.String)">
<summary>
 Create an HTML attribute &quot;keytype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.itemprop(System.String)">
<summary>
 Create an HTML attribute &quot;itemprop&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.ismap(System.String)">
<summary>
 Create an HTML attribute &quot;ismap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.id(System.String)">
<summary>
 Create an HTML attribute &quot;id&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.icon(System.String)">
<summary>
 Create an HTML attribute &quot;icon&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.http(System.String)">
<summary>
 Create an HTML attribute &quot;http&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.hspace(System.String)">
<summary>
 Create an HTML attribute &quot;hspace&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.hreflang(System.String)">
<summary>
 Create an HTML attribute &quot;hreflang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.href(System.String)">
<summary>
 Create an HTML attribute &quot;href&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.high(System.String)">
<summary>
 Create an HTML attribute &quot;high&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.hidden(System.String)">
<summary>
 Create an HTML attribute &quot;hidden&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.height(System.String)">
<summary>
 Create an HTML attribute &quot;height&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.headers(System.String)">
<summary>
 Create an HTML attribute &quot;headers&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.frameborder(System.String)">
<summary>
 Create an HTML attribute &quot;frameborder&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.frame(System.String)">
<summary>
 Create an HTML attribute &quot;frame&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.formtarget(System.String)">
<summary>
 Create an HTML attribute &quot;formtarget&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.formnovalidate(System.String)">
<summary>
 Create an HTML attribute &quot;formnovalidate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.formmethod(System.String)">
<summary>
 Create an HTML attribute &quot;formmethod&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.formenctype(System.String)">
<summary>
 Create an HTML attribute &quot;formenctype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.formaction(System.String)">
<summary>
 Create an HTML attribute &quot;formaction&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.form(System.String)">
<summary>
 Create an HTML attribute &quot;form&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.for(System.String)">
<summary>
 Create an HTML attribute &quot;for&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.face(System.String)">
<summary>
 Create an HTML attribute &quot;face&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.enctype(System.String)">
<summary>
 Create an HTML attribute &quot;enctype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.dropzone(System.String)">
<summary>
 Create an HTML attribute &quot;dropzone&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.draggable(System.String)">
<summary>
 Create an HTML attribute &quot;draggable&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.download(System.String)">
<summary>
 Create an HTML attribute &quot;download&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.disabled(System.String)">
<summary>
 Create an HTML attribute &quot;disabled&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.dir(System.String)">
<summary>
 Create an HTML attribute &quot;dir&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.defer(System.String)">
<summary>
 Create an HTML attribute &quot;defer&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.default(System.String)">
<summary>
 Create an HTML attribute &quot;default&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.declare(System.String)">
<summary>
 Create an HTML attribute &quot;declare&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.datetime(System.String)">
<summary>
 Create an HTML attribute &quot;datetime&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.data(System.String)">
<summary>
 Create an HTML attribute &quot;data&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.coords(System.String)">
<summary>
 Create an HTML attribute &quot;coords&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.controls(System.String)">
<summary>
 Create an HTML attribute &quot;controls&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.contextmenu(System.String)">
<summary>
 Create an HTML attribute &quot;contextmenu&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.contenteditable(System.String)">
<summary>
 Create an HTML attribute &quot;contenteditable&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.content(System.String)">
<summary>
 Create an HTML attribute &quot;content&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.compact(System.String)">
<summary>
 Create an HTML attribute &quot;compact&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.colspan(System.String)">
<summary>
 Create an HTML attribute &quot;colspan&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.cols(System.String)">
<summary>
 Create an HTML attribute &quot;cols&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.color(System.String)">
<summary>
 Create an HTML attribute &quot;color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.codetype(System.String)">
<summary>
 Create an HTML attribute &quot;codetype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.codebase(System.String)">
<summary>
 Create an HTML attribute &quot;codebase&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.code(System.String)">
<summary>
 Create an HTML attribute &quot;code&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.clear(System.String)">
<summary>
 Create an HTML attribute &quot;clear&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.classid(System.String)">
<summary>
 Create an HTML attribute &quot;classid&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.class(System.String)">
<summary>
 Create an HTML attribute &quot;class&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.cite(System.String)">
<summary>
 Create an HTML attribute &quot;cite&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.checked(System.String)">
<summary>
 Create an HTML attribute &quot;checked&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.charset(System.String)">
<summary>
 Create an HTML attribute &quot;charset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.charoff(System.String)">
<summary>
 Create an HTML attribute &quot;charoff&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.char(System.String)">
<summary>
 Create an HTML attribute &quot;char&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.challenge(System.String)">
<summary>
 Create an HTML attribute &quot;challenge&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.cellspacing(System.String)">
<summary>
 Create an HTML attribute &quot;cellspacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.cellpadding(System.String)">
<summary>
 Create an HTML attribute &quot;cellpadding&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.buffered(System.String)">
<summary>
 Create an HTML attribute &quot;buffered&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.bordercolor(System.String)">
<summary>
 Create an HTML attribute &quot;bordercolor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.border(System.String)">
<summary>
 Create an HTML attribute &quot;border&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.bgcolor(System.String)">
<summary>
 Create an HTML attribute &quot;bgcolor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.background(System.String)">
<summary>
 Create an HTML attribute &quot;background&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.axis(System.String)">
<summary>
 Create an HTML attribute &quot;axis&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.autosave(System.String)">
<summary>
 Create an HTML attribute &quot;autosave&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.autoplay(System.String)">
<summary>
 Create an HTML attribute &quot;autoplay&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.autofocus(System.String)">
<summary>
 Create an HTML attribute &quot;autofocus&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.autocomplete(System.String)">
<summary>
 Create an HTML attribute &quot;autocomplete&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.async(System.String)">
<summary>
 Create an HTML attribute &quot;async&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.archive(System.String)">
<summary>
 Create an HTML attribute &quot;archive&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.altcode(System.String)">
<summary>
 Create an HTML attribute &quot;altcode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.alt(System.String)">
<summary>
 Create an HTML attribute &quot;alt&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.alink(System.String)">
<summary>
 Create an HTML attribute &quot;alink&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.align(System.String)">
<summary>
 Create an HTML attribute &quot;align&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.action(System.String)">
<summary>
 Create an HTML attribute &quot;action&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.accesskey(System.String)">
<summary>
 Create an HTML attribute &quot;accesskey&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.acceptCharset(System.String)">
<summary>
 Create an HTML attribute &quot;accept-charset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.accept(System.String)">
<summary>
 Create an HTML attribute &quot;accept&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.attr.data-(System.String,System.String)">
<summary>
 Create an HTML attribute &quot;data-name&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.vkern(System.Object[])">
<summary>
 Create an SVG element &lt;vkern&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.view(System.Object[])">
<summary>
 Create an SVG element &lt;view&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.use(System.Object[])">
<summary>
 Create an SVG element &lt;use&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.tspan(System.Object[])">
<summary>
 Create an SVG element &lt;tspan&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.tref(System.Object[])">
<summary>
 Create an SVG element &lt;tref&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.title(System.Object[])">
<summary>
 Create an SVG element &lt;title&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.textpath(System.Object[])">
<summary>
 Create an SVG element &lt;textpath&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.text(System.Object[])">
<summary>
 Create an SVG element &lt;text&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.symbol(System.Object[])">
<summary>
 Create an SVG element &lt;symbol&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.switch(System.Object[])">
<summary>
 Create an SVG element &lt;switch&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.svg(System.Object[])">
<summary>
 Create an SVG element &lt;svg&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.style(System.Object[])">
<summary>
 Create an SVG element &lt;style&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.stop(System.Object[])">
<summary>
 Create an SVG element &lt;stop&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.set(System.Object[])">
<summary>
 Create an SVG element &lt;set&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.script(System.Object[])">
<summary>
 Create an SVG element &lt;script&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.rect(System.Object[])">
<summary>
 Create an SVG element &lt;rect&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.radialgradient(System.Object[])">
<summary>
 Create an SVG element &lt;radialgradient&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.polyline(System.Object[])">
<summary>
 Create an SVG element &lt;polyline&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.polygon(System.Object[])">
<summary>
 Create an SVG element &lt;polygon&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.pattern(System.Object[])">
<summary>
 Create an SVG element &lt;pattern&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.path(System.Object[])">
<summary>
 Create an SVG element &lt;path&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.mpath(System.Object[])">
<summary>
 Create an SVG element &lt;mpath&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.missingGlyph(System.Object[])">
<summary>
 Create an SVG element &lt;missing-glyph&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.metadata(System.Object[])">
<summary>
 Create an SVG element &lt;metadata&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.mask(System.Object[])">
<summary>
 Create an SVG element &lt;mask&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.marker(System.Object[])">
<summary>
 Create an SVG element &lt;marker&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.lineargradient(System.Object[])">
<summary>
 Create an SVG element &lt;lineargradient&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.line(System.Object[])">
<summary>
 Create an SVG element &lt;line&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.image(System.Object[])">
<summary>
 Create an SVG element &lt;image&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.hkern(System.Object[])">
<summary>
 Create an SVG element &lt;hkern&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.glyphref(System.Object[])">
<summary>
 Create an SVG element &lt;glyphref&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.glyph(System.Object[])">
<summary>
 Create an SVG element &lt;glyph&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.g(System.Object[])">
<summary>
 Create an SVG element &lt;g&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.foreignobject(System.Object[])">
<summary>
 Create an SVG element &lt;foreignobject&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fontFaceUri(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-uri&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fontFaceSrc(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-src&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fontFaceName(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-name&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fontFaceFormat(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-format&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fontFace(System.Object[])">
<summary>
 Create an SVG element &lt;font-face&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.font(System.Object[])">
<summary>
 Create an SVG element &lt;font&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.filter(System.Object[])">
<summary>
 Create an SVG element &lt;filter&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.feturbulence(System.Object[])">
<summary>
 Create an SVG element &lt;feturbulence&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fetile(System.Object[])">
<summary>
 Create an SVG element &lt;fetile&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fespotlight(System.Object[])">
<summary>
 Create an SVG element &lt;fespotlight&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fespecularlighting(System.Object[])">
<summary>
 Create an SVG element &lt;fespecularlighting&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fepointlight(System.Object[])">
<summary>
 Create an SVG element &lt;fepointlight&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.feoffset(System.Object[])">
<summary>
 Create an SVG element &lt;feoffset&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.femorphology(System.Object[])">
<summary>
 Create an SVG element &lt;femorphology&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.femergenode(System.Object[])">
<summary>
 Create an SVG element &lt;femergenode&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.femerge(System.Object[])">
<summary>
 Create an SVG element &lt;femerge&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.feimage(System.Object[])">
<summary>
 Create an SVG element &lt;feimage&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fegaussianblur(System.Object[])">
<summary>
 Create an SVG element &lt;fegaussianblur&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fefuncr(System.Object[])">
<summary>
 Create an SVG element &lt;fefuncr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fefuncg(System.Object[])">
<summary>
 Create an SVG element &lt;fefuncg&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fefuncb(System.Object[])">
<summary>
 Create an SVG element &lt;fefuncb&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fefunca(System.Object[])">
<summary>
 Create an SVG element &lt;fefunca&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.feflood(System.Object[])">
<summary>
 Create an SVG element &lt;feflood&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fedistantlight(System.Object[])">
<summary>
 Create an SVG element &lt;fedistantlight&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fedisplacementmap(System.Object[])">
<summary>
 Create an SVG element &lt;fedisplacementmap&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fediffuselighting(System.Object[])">
<summary>
 Create an SVG element &lt;fediffuselighting&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.feconvolvematrix(System.Object[])">
<summary>
 Create an SVG element &lt;feconvolvematrix&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fecomposite(System.Object[])">
<summary>
 Create an SVG element &lt;fecomposite&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fecomponenttransfer(System.Object[])">
<summary>
 Create an SVG element &lt;fecomponenttransfer&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.fecolormatrix(System.Object[])">
<summary>
 Create an SVG element &lt;fecolormatrix&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.feblend(System.Object[])">
<summary>
 Create an SVG element &lt;feblend&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.ellipse(System.Object[])">
<summary>
 Create an SVG element &lt;ellipse&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.desc(System.Object[])">
<summary>
 Create an SVG element &lt;desc&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.defs(System.Object[])">
<summary>
 Create an SVG element &lt;defs&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.cursor(System.Object[])">
<summary>
 Create an SVG element &lt;cursor&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.colorProfile(System.Object[])">
<summary>
 Create an SVG element &lt;color-profile&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.clippath(System.Object[])">
<summary>
 Create an SVG element &lt;clippath&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.circle(System.Object[])">
<summary>
 Create an SVG element &lt;circle&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.animatetransform(System.Object[])">
<summary>
 Create an SVG element &lt;animatetransform&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.animatemotion(System.Object[])">
<summary>
 Create an SVG element &lt;animatemotion&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.animatecolor(System.Object[])">
<summary>
 Create an SVG element &lt;animatecolor&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.animate(System.Object[])">
<summary>
 Create an SVG element &lt;animate&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.altglyphitem(System.Object[])">
<summary>
 Create an SVG element &lt;altglyphitem&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.altglyphdef(System.Object[])">
<summary>
 Create an SVG element &lt;altglyphdef&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.altglyph(System.Object[])">
<summary>
 Create an SVG element &lt;altglyph&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Html.SvgElements.a(System.Object[])">
<summary>
 Create an SVG element &lt;a&gt; with children nodes.
</summary>
</member>
<member name="T:WebSharper.UI.Next.CSharp.Html">
<summary>
 This is an auto-generated module providing HTML5 vocabulary.
 Generated using tags.csv from WebSharper;
 See tools/UpdateElems.fsx for the code-generation logic.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnWheel(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.WheelEvent}})">
<summary>
 Add a handler for the event &quot;wheel&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnWaiting(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;waiting&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnVolumeChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;volumechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnVisibilityChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnVersionChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;versionchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnUserProximity(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;userproximity&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnUpgradeNeeded(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnUpdateReady(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;updateready&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnUnload(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;unload&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTransitionEnd(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;transitionend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTouchStart(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTouchMove(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchmove&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTouchLeave(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchleave&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTouchEnter(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchenter&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTouchEnd(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTouchCancel(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;touchcancel&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTimeUpdate(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;timeupdate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnTimeOut(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;timeout&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSuspend(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;suspend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSuccess(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;success&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSubmit(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;submit&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnStorage(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;storage&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnStalled(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;stalled&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnShow(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;show&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSelect(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;select&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSeeking(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;seeking&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSeeked(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;seeked&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnScroll(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;scroll&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGZoom(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGUnload(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGScroll(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGResize(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGResize&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGLoad(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGError(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGError&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnSVGAbort(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnResize(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;resize&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnReset(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;reset&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnRepeatEvent(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnReadyStateChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;readystatechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnRateChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;ratechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnProgress(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;progress&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPopState(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;popstate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPointerLockError(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPointerLockChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPlaying(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;playing&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPlay(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;play&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPause(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pause&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPaste(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;paste&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPageShow(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pageshow&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnPageHide(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;pagehide&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnOrientationChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;orientationchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnOpen(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;open&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnOnline(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;online&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnOffline(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;offline&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnObsolete(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;obsolete&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnNoUpdate(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;noupdate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseUp(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseup&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseOver(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseover&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseOut(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseout&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseMove(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mousemove&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseLeave(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseleave&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseEnter(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mouseenter&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMouseDown(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;mousedown&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnMessage(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;message&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLoadedMetadata(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLoadedData(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadeddata&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLoadStart(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLoadEnd(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;loadend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLoad(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;load&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLevelChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;levelchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnLanguageChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;languagechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnKeyUp(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent}})">
<summary>
 Add a handler for the event &quot;keyup&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnKeyPress(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent}})">
<summary>
 Add a handler for the event &quot;keypress&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnKeyDown(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent}})">
<summary>
 Add a handler for the event &quot;keydown&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnInvalid(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;invalid&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnInput(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;input&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnHashChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;hashchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnGamepadDisconnected(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnGamepadConnected(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnFullScreenError(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnFullScreenChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnFocus(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent}})">
<summary>
 Add a handler for the event &quot;focus&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnError(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;error&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnEnded(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;ended&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnEndEvent(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;endEvent&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnEmptied(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;emptied&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDurationChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;durationchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDrop(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;drop&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDragStart(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDragOver(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragover&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDragLeave(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragleave&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDragEnter(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragenter&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDragEnd(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dragend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDrag(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;drag&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDownloading(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;downloading&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDischargingTimeChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDeviceProximity(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDeviceOrientation(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDeviceMotion(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;devicemotion&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDeviceLight(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;devicelight&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDblClick(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;dblclick&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMSubtreeModified(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMNodeRemovedFromDocument(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMNodeRemoved(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMNodeInsertedIntoDocument(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMNodeInserted(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMElementNameChanged(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMContentLoaded(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMCharacterDataModified(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMAttributeNameChanged(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMAttrModified(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent}})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnDOMActivate(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCut(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;cut&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCopy(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;copy&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnContextMenu(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;contextmenu&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCompositionUpdate(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent}})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCompositionStart(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent}})">
<summary>
 Add a handler for the event &quot;compositionstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCompositionEnd(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent}})">
<summary>
 Add a handler for the event &quot;compositionend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnComplete(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;complete&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnClose(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;close&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnClick(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent}})">
<summary>
 Add a handler for the event &quot;click&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnChecking(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;checking&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnChargingTimeChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnChargingChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;chargingchange&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnChange(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;change&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCanPlayThrough(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCanPlay(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;canplay&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnCached(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;cached&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnBlur(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent}})">
<summary>
 Add a handler for the event &quot;blur&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnBlocked(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;blocked&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnBeginEvent(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;beginEvent&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnBeforeUnload(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;beforeunload&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnBeforePrint(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;beforeprint&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnAudioProcess(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;audioprocess&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnAnimationStart(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;animationstart&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnAnimationIteration(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;animationiteration&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnAnimationEnd(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;animationend&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnAfterPrint(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event}})">
<summary>
 Add a handler for the event &quot;afterprint&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Server.EltExtensions.OnAbort(WebSharper.UI.Next.Elt,System.Linq.Expressions.Expression{System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent}})">
<summary>
 Add a handler for the event &quot;abort&quot;.
 Event handler defined on server-side, lambda must be a call to a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunReplace(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Runs a reactive Doc replacing the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunReplace(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Node)">
<summary>
 Runs a reactive Doc replacing the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunPrepend(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Runs a reactive Doc as first child(ren) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunPrepend(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Element)">
<summary>
 Runs a reactive Doc as first child(ren) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunBefore(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Runs a reactive Doc as previous sibling(s) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunBefore(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Node)">
<summary>
 Runs a reactive Doc as previous sibling(s) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunAppend(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Runs a reactive Doc as last child(ren) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunAppend(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Element)">
<summary>
 Runs a reactive Doc as last child(ren) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunAfter(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Runs a reactive Doc as next sibling(s) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.RunAfter(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Node)">
<summary>
 Runs a reactive Doc as next sibling(s) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.Run(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Runs a reactive Doc as contents of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.Run(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Element)">
<summary>
 Runs a reactive Doc as contents of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnWheelView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.WheelEvent,``0})">
<summary>
 Add a handler for the event &quot;wheel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnWheel(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.WheelEvent})">
<summary>
 Add a handler for the event &quot;wheel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnWaitingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;waiting&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnWaiting(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;waiting&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnVolumeChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;volumechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnVolumeChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;volumechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnVisibilityChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnVisibilityChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnVersionChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;versionchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnVersionChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;versionchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUserProximityView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;userproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUserProximity(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;userproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUpgradeNeededView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUpgradeNeeded(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUpdateReadyView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;updateready&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUpdateReady(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;updateready&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUnloadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;unload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnUnload(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;unload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTransitionEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;transitionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTransitionEnd(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;transitionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;touchstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchStart(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;touchstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchMoveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;touchmove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchMove(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;touchmove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchLeaveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;touchleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchLeave(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;touchleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchEnterView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;touchenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchEnter(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;touchenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;touchend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchEnd(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;touchend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchCancelView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;touchcancel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTouchCancel(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;touchcancel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTimeUpdateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;timeupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTimeUpdate(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;timeupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTimeOutView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;timeout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnTimeOut(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;timeout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSuspendView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;suspend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSuspend(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;suspend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSuccessView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;success&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSuccess(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;success&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSubmitView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;submit&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSubmit(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;submit&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnStorageView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;storage&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnStorage(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;storage&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnStalledView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;stalled&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnStalled(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;stalled&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnShowView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;show&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnShow(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;show&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSelectView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;select&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSelect(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;select&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSeekingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;seeking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSeeking(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;seeking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSeekedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;seeked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSeeked(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;seeked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnScrollView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;scroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnScroll(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;scroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGZoomView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGZoom(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGUnloadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGUnload(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGScrollView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGScroll(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGResizeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGResize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGResize(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGResize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGLoadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGLoad(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGError&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGError(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGError&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGAbortView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnSVGAbort(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnResizeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;resize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnResize(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;resize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnResetView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;reset&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnReset(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;reset&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnRepeatEventView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnRepeatEvent(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnReadyStateChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;readystatechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnReadyStateChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;readystatechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnRateChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;ratechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnRateChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;ratechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnProgressView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;progress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnProgress(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;progress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPopStateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;popstate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPopState(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;popstate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPointerLockErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPointerLockError(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPointerLockChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPointerLockChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPlayingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;playing&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPlaying(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;playing&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPlayView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;play&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPlay(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;play&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPauseView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;pause&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPause(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;pause&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPasteView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;paste&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPaste(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;paste&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPageShowView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;pageshow&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPageShow(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;pageshow&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPageHideView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;pagehide&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnPageHide(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;pagehide&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOrientationChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;orientationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOrientationChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;orientationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOpenView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;open&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOpen(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;open&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOnlineView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;online&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOnline(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;online&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOfflineView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;offline&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnOffline(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;offline&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnObsoleteView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;obsolete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnObsolete(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;obsolete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnNoUpdateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;noupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnNoUpdate(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;noupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseUpView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mouseup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseUp(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mouseup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseOverView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mouseover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseOver(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mouseover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseOutView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mouseout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseOut(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mouseout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseMoveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mousemove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseMove(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mousemove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseLeaveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mouseleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseLeave(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mouseleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseEnterView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mouseenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseEnter(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mouseenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseDownView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;mousedown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMouseDown(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;mousedown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMessageView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;message&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnMessage(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;message&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadedMetadataView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadedMetadata(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadedDataView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;loadeddata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadedData(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;loadeddata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;load&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;loadstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadStart(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;loadstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;loadend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoadEnd(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;loadend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLoad(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;load&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLevelChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;levelchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLevelChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;levelchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLanguageChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;languagechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnLanguageChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;languagechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnKeyUpView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent,``0})">
<summary>
 Add a handler for the event &quot;keyup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnKeyUp(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent})">
<summary>
 Add a handler for the event &quot;keyup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnKeyPressView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent,``0})">
<summary>
 Add a handler for the event &quot;keypress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnKeyPress(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent})">
<summary>
 Add a handler for the event &quot;keypress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnKeyDownView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent,``0})">
<summary>
 Add a handler for the event &quot;keydown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnKeyDown(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent})">
<summary>
 Add a handler for the event &quot;keydown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnInvalidView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;invalid&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnInvalid(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;invalid&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnInputView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;input&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnInput(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;input&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnHashChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;hashchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnHashChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;hashchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnGamepadDisconnectedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnGamepadDisconnected(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnGamepadConnectedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnGamepadConnected(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnFullScreenErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnFullScreenError(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnFullScreenChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnFullScreenChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnFocusView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent,``0})">
<summary>
 Add a handler for the event &quot;focus&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnFocus(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent})">
<summary>
 Add a handler for the event &quot;focus&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;error&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnError(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;error&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnEndedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;ended&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnEnded(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;ended&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnEndEventView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;endEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnEndEvent(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;endEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnEmptiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;emptied&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnEmptied(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;emptied&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDurationChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;durationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDurationChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;durationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDropView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;drop&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDrop(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;drop&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;drag&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;dragstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragStart(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;dragstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragOverView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;dragover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragOver(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;dragover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragLeaveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;dragleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragLeave(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;dragleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragEnterView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;dragenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragEnter(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;dragenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;dragend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDragEnd(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;dragend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDrag(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;drag&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDownloadingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;downloading&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDownloading(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;downloading&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDischargingTimeChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDischargingTimeChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceProximityView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceProximity(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceOrientationView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceOrientation(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceMotionView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;devicemotion&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceMotion(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;devicemotion&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceLightView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;devicelight&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDeviceLight(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;devicelight&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDblClickView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;dblclick&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDblClick(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;dblclick&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMSubtreeModifiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMSubtreeModified(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeRemovedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeRemovedFromDocumentView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeRemovedFromDocument(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeRemoved(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeInsertedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeInsertedIntoDocumentView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeInsertedIntoDocument(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMNodeInserted(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMElementNameChangedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMElementNameChanged(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMContentLoadedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMContentLoaded(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMCharacterDataModifiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMCharacterDataModified(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMAttributeNameChangedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMAttributeNameChanged(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMAttrModifiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMAttrModified(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMActivateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnDOMActivate(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCutView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;cut&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCut(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;cut&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCopyView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;copy&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCopy(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;copy&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnContextMenuView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;contextmenu&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnContextMenu(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;contextmenu&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompositionUpdateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent,``0})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompositionUpdate(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompositionStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent,``0})">
<summary>
 Add a handler for the event &quot;compositionstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompositionStart(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent})">
<summary>
 Add a handler for the event &quot;compositionstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompositionEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent,``0})">
<summary>
 Add a handler for the event &quot;compositionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompositionEnd(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent})">
<summary>
 Add a handler for the event &quot;compositionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCompleteView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;complete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnComplete(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;complete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCloseView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;close&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnClose(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;close&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnClickView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Add a handler for the event &quot;click&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnClick(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Add a handler for the event &quot;click&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCheckingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;checking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChecking(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;checking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChargingTimeChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChargingTimeChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChargingChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;chargingchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChargingChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;chargingchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;change&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnChange(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;change&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCanPlayView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;canplay&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCanPlayThroughView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCanPlayThrough(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCanPlay(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;canplay&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCachedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;cached&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnCached(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;cached&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBlurView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent,``0})">
<summary>
 Add a handler for the event &quot;blur&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBlur(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent})">
<summary>
 Add a handler for the event &quot;blur&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBlockedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;blocked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBlocked(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;blocked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBeginEventView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;beginEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBeginEvent(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;beginEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBeforeUnloadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;beforeunload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBeforeUnload(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;beforeunload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBeforePrintView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;beforeprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnBeforePrint(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;beforeprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAudioProcessView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;audioprocess&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAudioProcess(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;audioprocess&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAnimationStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;animationstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAnimationStart(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;animationstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAnimationIterationView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;animationiteration&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAnimationIteration(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;animationiteration&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAnimationEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;animationend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAnimationEnd(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;animationend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAfterPrintView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Add a handler for the event &quot;afterprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAfterPrint(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Add a handler for the event &quot;afterprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAbortView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Add a handler for the event &quot;abort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.CSharpDocExtensions.OnAbort(WebSharper.UI.Next.Elt,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Add a handler for the event &quot;abort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.wbr(System.Object[])">
<summary>
 Create an HTML element &lt;wbr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.video(System.Object[])">
<summary>
 Create an HTML element &lt;video&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.ul(System.Object[])">
<summary>
 Create an HTML element &lt;ul&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.track(System.Object[])">
<summary>
 Create an HTML element &lt;track&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.tr(System.Object[])">
<summary>
 Create an HTML element &lt;tr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.time(System.Object[])">
<summary>
 Create an HTML element &lt;time&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.thead(System.Object[])">
<summary>
 Create an HTML element &lt;thead&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.th(System.Object[])">
<summary>
 Create an HTML element &lt;th&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.tfoot(System.Object[])">
<summary>
 Create an HTML element &lt;tfoot&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.textarea(System.Object[])">
<summary>
 Create an HTML element &lt;textarea&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.td(System.Object[])">
<summary>
 Create an HTML element &lt;td&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.tbody(System.Object[])">
<summary>
 Create an HTML element &lt;tbody&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.table(System.Object[])">
<summary>
 Create an HTML element &lt;table&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.sup(System.Object[])">
<summary>
 Create an HTML element &lt;sup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.summary(System.Object[])">
<summary>
 Create an HTML element &lt;summary&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.sub(System.Object[])">
<summary>
 Create an HTML element &lt;sub&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.strong(System.Object[])">
<summary>
 Create an HTML element &lt;strong&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.span(System.Object[])">
<summary>
 Create an HTML element &lt;span&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.source(System.Object[])">
<summary>
 Create an HTML element &lt;source&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.small(System.Object[])">
<summary>
 Create an HTML element &lt;small&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.shadow(System.Object[])">
<summary>
 Create an HTML element &lt;shadow&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.select(System.Object[])">
<summary>
 Create an HTML element &lt;select&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.section(System.Object[])">
<summary>
 Create an HTML element &lt;section&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.script(System.Object[])">
<summary>
 Create an HTML element &lt;script&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.samp(System.Object[])">
<summary>
 Create an HTML element &lt;samp&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.ruby(System.Object[])">
<summary>
 Create an HTML element &lt;ruby&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.rtc(System.Object[])">
<summary>
 Create an HTML element &lt;rtc&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.rt(System.Object[])">
<summary>
 Create an HTML element &lt;rt&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.rp(System.Object[])">
<summary>
 Create an HTML element &lt;rp&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.q(System.Object[])">
<summary>
 Create an HTML element &lt;q&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.progress(System.Object[])">
<summary>
 Create an HTML element &lt;progress&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.pre(System.Object[])">
<summary>
 Create an HTML element &lt;pre&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.picture(System.Object[])">
<summary>
 Create an HTML element &lt;picture&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.param(System.Object[])">
<summary>
 Create an HTML element &lt;param&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.p(System.Object[])">
<summary>
 Create an HTML element &lt;p&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.output(System.Object[])">
<summary>
 Create an HTML element &lt;output&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.optgroup(System.Object[])">
<summary>
 Create an HTML element &lt;optgroup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.ol(System.Object[])">
<summary>
 Create an HTML element &lt;ol&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.noscript(System.Object[])">
<summary>
 Create an HTML element &lt;noscript&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.noframes(System.Object[])">
<summary>
 Create an HTML element &lt;noframes&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.nav(System.Object[])">
<summary>
 Create an HTML element &lt;nav&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.meter(System.Object[])">
<summary>
 Create an HTML element &lt;meter&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.meta(System.Object[])">
<summary>
 Create an HTML element &lt;meta&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.mark(System.Object[])">
<summary>
 Create an HTML element &lt;mark&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.link(System.Object[])">
<summary>
 Create an HTML element &lt;link&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.li(System.Object[])">
<summary>
 Create an HTML element &lt;li&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.legend(System.Object[])">
<summary>
 Create an HTML element &lt;legend&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.label(System.Object[])">
<summary>
 Create an HTML element &lt;label&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.keygen(System.Object[])">
<summary>
 Create an HTML element &lt;keygen&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.kbd(System.Object[])">
<summary>
 Create an HTML element &lt;kbd&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.ins(System.Object[])">
<summary>
 Create an HTML element &lt;ins&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.input(System.Object[])">
<summary>
 Create an HTML element &lt;input&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.img(System.Object[])">
<summary>
 Create an HTML element &lt;img&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.iframe(System.Object[])">
<summary>
 Create an HTML element &lt;iframe&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.i(System.Object[])">
<summary>
 Create an HTML element &lt;i&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.html(System.Object[])">
<summary>
 Create an HTML element &lt;html&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.hr(System.Object[])">
<summary>
 Create an HTML element &lt;hr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.hgroup(System.Object[])">
<summary>
 Create an HTML element &lt;hgroup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.header(System.Object[])">
<summary>
 Create an HTML element &lt;header&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.head(System.Object[])">
<summary>
 Create an HTML element &lt;head&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.h6(System.Object[])">
<summary>
 Create an HTML element &lt;h6&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.h5(System.Object[])">
<summary>
 Create an HTML element &lt;h5&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.h4(System.Object[])">
<summary>
 Create an HTML element &lt;h4&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.h3(System.Object[])">
<summary>
 Create an HTML element &lt;h3&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.h2(System.Object[])">
<summary>
 Create an HTML element &lt;h2&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.h1(System.Object[])">
<summary>
 Create an HTML element &lt;h1&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.form(System.Object[])">
<summary>
 Create an HTML element &lt;form&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.footer(System.Object[])">
<summary>
 Create an HTML element &lt;footer&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.figure(System.Object[])">
<summary>
 Create an HTML element &lt;figure&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.figcaption(System.Object[])">
<summary>
 Create an HTML element &lt;figcaption&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.fieldset(System.Object[])">
<summary>
 Create an HTML element &lt;fieldset&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.embed(System.Object[])">
<summary>
 Create an HTML element &lt;embed&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.em(System.Object[])">
<summary>
 Create an HTML element &lt;em&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.dt(System.Object[])">
<summary>
 Create an HTML element &lt;dt&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.dl(System.Object[])">
<summary>
 Create an HTML element &lt;dl&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.div(System.Object[])">
<summary>
 Create an HTML element &lt;div&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.dfn(System.Object[])">
<summary>
 Create an HTML element &lt;dfn&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.details(System.Object[])">
<summary>
 Create an HTML element &lt;details&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.del(System.Object[])">
<summary>
 Create an HTML element &lt;del&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.dd(System.Object[])">
<summary>
 Create an HTML element &lt;dd&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.datalist(System.Object[])">
<summary>
 Create an HTML element &lt;datalist&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.command(System.Object[])">
<summary>
 Create an HTML element &lt;command&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.colgroup(System.Object[])">
<summary>
 Create an HTML element &lt;colgroup&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.col(System.Object[])">
<summary>
 Create an HTML element &lt;col&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.code(System.Object[])">
<summary>
 Create an HTML element &lt;code&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.cite(System.Object[])">
<summary>
 Create an HTML element &lt;cite&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.caption(System.Object[])">
<summary>
 Create an HTML element &lt;caption&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.canvas(System.Object[])">
<summary>
 Create an HTML element &lt;canvas&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.button(System.Object[])">
<summary>
 Create an HTML element &lt;button&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.br(System.Object[])">
<summary>
 Create an HTML element &lt;br&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.body(System.Object[])">
<summary>
 Create an HTML element &lt;body&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.blockquote(System.Object[])">
<summary>
 Create an HTML element &lt;blockquote&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.bdo(System.Object[])">
<summary>
 Create an HTML element &lt;bdo&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.bdi(System.Object[])">
<summary>
 Create an HTML element &lt;bdi&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.base(System.Object[])">
<summary>
 Create an HTML element &lt;base&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.b(System.Object[])">
<summary>
 Create an HTML element &lt;b&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.audio(System.Object[])">
<summary>
 Create an HTML element &lt;audio&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.aside(System.Object[])">
<summary>
 Create an HTML element &lt;aside&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.article(System.Object[])">
<summary>
 Create an HTML element &lt;article&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.area(System.Object[])">
<summary>
 Create an HTML element &lt;area&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.address(System.Object[])">
<summary>
 Create an HTML element &lt;address&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.abbr(System.Object[])">
<summary>
 Create an HTML element &lt;abbr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.a(System.Object[])">
<summary>
 Create an HTML element &lt;a&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.handler``1(System.String,WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Sets an event handler, for a given event such as `click`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.handler(System.String,System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Sets an event handler, for a given event such as `click`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.style``1(System.String,WebSharper.UI.Next.Trans{``0},WebSharper.UI.Next.View{``0},System.Func{``0,System.String})">
<summary>
 Animated variant of Style.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.style(System.String,WebSharper.UI.Next.View{System.String})">
<summary>
 Dynamic variant of Style.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.style(System.String,System.String)">
<summary>
 Sets a style attribute, such as `background-color`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attrib(System.String,WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 Sets a basic DOM attribute, such as `id` to a text value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attrib(System.String,WebSharper.UI.Next.View{System.String})">
<summary>
 Sets a basic DOM attribute, such as `id` to a text value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attrib(System.String,System.String)">
<summary>
 Sets a basic DOM attribute, such as `id` to a text value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.radio``1(WebSharper.UI.Next.IRef{``0},``0,WebSharper.UI.Next.Attr[])">
<summary>
 Radio button.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.select``1(WebSharper.UI.Next.IRef{Microsoft.FSharp.Core.FSharpOption{``0}},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},System.String,System.Func{``0,System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Select box with time-varying option list where the first option returns None.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.select``1(WebSharper.UI.Next.IRef{Microsoft.FSharp.Core.FSharpOption{``0}},System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Select box where the first option returns None.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.select``1(WebSharper.UI.Next.IRef{``0},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Select box with time-varying option list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.select``1(WebSharper.UI.Next.IRef{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Select box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.checkbox``1(``0,WebSharper.UI.Next.IRef{System.Collections.Generic.IEnumerable{``0}},WebSharper.UI.Next.Attr[])">
<summary>
 Check Box which is part of a Group.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.checkbox(WebSharper.UI.Next.IRef{System.Boolean},WebSharper.UI.Next.Attr[])">
<summary>
 Check Box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.link``1(System.String,WebSharper.UI.Next.View{``0},System.Action{``0},WebSharper.UI.Next.Attr[])">
<summary>
 Hyperlink. Takes a view of reactive components with which it is associated,
 and a callback function of what to do with this view once the link is clicked.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.link(System.String,System.Action,WebSharper.UI.Next.Attr[])">
<summary>
 Hyperlink. Calls the callback function when the link is clicked.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.button``1(System.String,WebSharper.UI.Next.View{``0},System.Action{``0},WebSharper.UI.Next.Attr[])">
<summary>
 Submit button. Takes a view of reactive components with which it is associated,
 and a callback function of what to do with this view once the button is pressed.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.button(System.String,System.Action,WebSharper.UI.Next.Attr[])">
<summary>
 Submit button. Calls the callback function when the button is pressed.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.passwordBox(WebSharper.UI.Next.IRef{System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Password box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.textarea(WebSharper.UI.Next.IRef{System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Input text area.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.input(WebSharper.UI.Next.IRef{System.Double},WebSharper.UI.Next.Attr[])">
<summary>
 Input box with type=&quot;number&quot;.
 If the input box is blank, the value is set to 0.
 If the input is not parseable as a float, the value is unchanged from its last valid value.
 It is advised to use FloatInput instead for better user experience.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.input(WebSharper.UI.Next.IRef{System.Int32},WebSharper.UI.Next.Attr[])">
<summary>
 Input box with type=&quot;number&quot;.
 For validation to work properly in Internet Explorer 9 and older,
 needs to be inside a &lt;form&gt; with Attr.ValidateForm.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.input(WebSharper.UI.Next.IRef{System.String},WebSharper.UI.Next.Attr[])">
<summary>
 Input box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.text(WebSharper.UI.Next.View{System.String})">
<summary>
 Constructs a reactive text node.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.text(System.String)">
<summary>
 Constructs a text node.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.doc(System.Object[])">
<summary>
 Creates a Doc by concatenating Docs.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.doc``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
<summary>
 Embeds an asynchronous Doc. The resulting Doc is empty until the Async returns.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.doc(WebSharper.JavaScript.Dom.Element)">
<summary>
 Creates a Doc using a given DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.doc``2(WebSharper.UI.Next.View{``0},System.Func{``0,``1})">
<summary>
 Embeds time-varying fragments.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.doc``1(WebSharper.UI.Next.View{``0})">
<summary>
 Embeds time-varying fragments.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.wheel``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.WheelEvent,``0})">
<summary>
 Create a handler for the event &quot;wheel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.wheel(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.WheelEvent})">
<summary>
 Create a handler for the event &quot;wheel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.waiting``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;waiting&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.waiting(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;waiting&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.volumeChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;volumechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.volumeChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;volumechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.visibilityChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;visibilitychange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.visibilityChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;visibilitychange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.versionChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;versionchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.versionChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;versionchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.userProximity``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;userproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.userProximity(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;userproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.upgradeNeeded``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;upgradeneeded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.upgradeNeeded(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;upgradeneeded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.updateReady``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;updateready&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.updateReady(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;updateready&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.unload``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;unload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.unload(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;unload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.transitionEnd``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;transitionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.transitionEnd(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;transitionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchStart``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;touchstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchStart(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;touchstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchMove``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;touchmove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchMove(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;touchmove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchLeave``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;touchleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchLeave(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;touchleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchEnter``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;touchenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchEnter(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;touchenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchEnd``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;touchend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchEnd(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;touchend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchCancel``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;touchcancel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.touchCancel(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;touchcancel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.timeUpdate``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;timeupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.timeUpdate(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;timeupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.timeOut``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;timeout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.timeOut(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;timeout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGZoom``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGZoom&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGZoom(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGZoom&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGUnload``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGUnload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGUnload(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGUnload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGScroll``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGScroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGScroll(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGScroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGResize``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGResize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGResize(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGResize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGLoad``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGLoad&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGLoad(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGLoad&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGError``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGError&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGError(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGError&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGAbort``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;SVGAbort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.SVGAbort(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;SVGAbort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.suspend``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;suspend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.suspend(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;suspend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.success``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;success&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.success(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;success&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.submit``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;submit&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.submit(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;submit&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.storage``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;storage&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.storage(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;storage&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.stalled``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;stalled&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.stalled(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;stalled&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.show``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;show&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.show(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;show&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.select``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;select&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.select(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;select&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.seeking``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;seeking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.seeking(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;seeking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.seeked``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;seeked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.seeked(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;seeked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.scroll``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;scroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.scroll(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;scroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.resize``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;resize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.resize(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;resize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.reset``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;reset&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.reset(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;reset&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.repeatEvent``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;repeatEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.repeatEvent(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;repeatEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.readyStateChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;readystatechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.readyStateChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;readystatechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.rateChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;ratechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.rateChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;ratechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.progress``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;progress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.progress(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;progress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.popState``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;popstate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.popState(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;popstate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pointerLockError``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;pointerlockerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pointerLockError(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;pointerlockerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pointerLockChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;pointerlockchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pointerLockChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;pointerlockchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.playing``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;playing&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.playing(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;playing&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.play``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;play&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.play(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;play&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pause``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;pause&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pause(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;pause&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.paste``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;paste&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.paste(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;paste&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pageShow``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;pageshow&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pageShow(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;pageshow&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pageHide``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;pagehide&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.pageHide(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;pagehide&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.orientationChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;orientationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.orientationChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;orientationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.open``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;open&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.open(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;open&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.online``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;online&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.online(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;online&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.offline``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;offline&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.offline(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;offline&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.obsolete``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;obsolete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.obsolete(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;obsolete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.noUpdate``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;noupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.noUpdate(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;noupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseUp``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mouseup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseUp(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mouseup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseOver``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mouseover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseOver(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mouseover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseOut``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mouseout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseOut(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mouseout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseMove``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mousemove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseMove(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mousemove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseLeave``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mouseleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseLeave(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mouseleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseEnter``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mouseenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseEnter(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mouseenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseDown``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;mousedown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.mouseDown(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;mousedown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.message``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;message&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.message(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;message&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadStart``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;loadstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadStart(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;loadstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadEnd``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;loadend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadEnd(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;loadend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadedMetadata``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;loadedmetadata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadedMetadata(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;loadedmetadata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadedData``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;loadeddata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.loadedData(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;loadeddata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.load``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;load&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.load(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;load&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.levelChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;levelchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.levelChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;levelchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.languageChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;languagechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.languageChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;languagechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.keyUp``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent,``0})">
<summary>
 Create a handler for the event &quot;keyup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.keyUp(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent})">
<summary>
 Create a handler for the event &quot;keyup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.keyPress``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent,``0})">
<summary>
 Create a handler for the event &quot;keypress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.keyPress(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent})">
<summary>
 Create a handler for the event &quot;keypress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.keyDown``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent,``0})">
<summary>
 Create a handler for the event &quot;keydown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.keyDown(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.KeyboardEvent})">
<summary>
 Create a handler for the event &quot;keydown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.invalid``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;invalid&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.invalid(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;invalid&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.input``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;input&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.input(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;input&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.hashChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;hashchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.hashChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;hashchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.gamepadDisconnected``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;gamepaddisconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.gamepadDisconnected(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;gamepaddisconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.gamepadConnected``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;gamepadconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.gamepadConnected(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;gamepadconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.fullScreenError``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;fullscreenerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.fullScreenError(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;fullscreenerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.fullScreenChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;fullscreenchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.fullScreenChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;fullscreenchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.focus``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent,``0})">
<summary>
 Create a handler for the event &quot;focus&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.focus(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent})">
<summary>
 Create a handler for the event &quot;focus&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.error``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;error&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.error(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;error&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.endEvent``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;endEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.endEvent(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;endEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.ended``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;ended&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.ended(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;ended&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.emptied``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;emptied&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.emptied(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;emptied&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.durationChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;durationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.durationChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;durationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.drop``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;drop&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.drop(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;drop&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragStart``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;dragstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragStart(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;dragstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragOver``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;dragover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragOver(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;dragover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragLeave``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;dragleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragLeave(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;dragleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragEnter``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;dragenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragEnter(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;dragenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragEnd``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;dragend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dragEnd(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;dragend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.drag``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;drag&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.drag(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;drag&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.downloading``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;downloading&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.downloading(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;downloading&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMSubtreeModified``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMSubtreeModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMSubtreeModified(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMSubtreeModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeRemovedFromDocument``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMNodeRemovedFromDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeRemovedFromDocument(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeRemoved``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMNodeRemoved&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeRemoved(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMNodeRemoved&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeInsertedIntoDocument``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMNodeInsertedIntoDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeInsertedIntoDocument(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeInserted``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMNodeInserted&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMNodeInserted(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMNodeInserted&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMElementNameChanged``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;DOMElementNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMElementNameChanged(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;DOMElementNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMContentLoaded``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;DOMContentLoaded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMContentLoaded(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;DOMContentLoaded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMCharacterDataModified``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMCharacterDataModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMCharacterDataModified(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMCharacterDataModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMAttrModified``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMAttrModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMAttrModified(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MutationEvent})">
<summary>
 Create a handler for the event &quot;DOMAttrModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMAttributeNameChanged``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;DOMAttributeNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMAttributeNameChanged(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;DOMAttributeNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMActivate``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;DOMActivate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.DOMActivate(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;DOMActivate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dischargingTimeChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;dischargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dischargingTimeChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;dischargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceProximity``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;deviceproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceProximity(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;deviceproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceOrientation``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;deviceorientation&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceOrientation(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;deviceorientation&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceMotion``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;devicemotion&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceMotion(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;devicemotion&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceLight``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;devicelight&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.deviceLight(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;devicelight&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dblClick``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;dblclick&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.dblClick(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;dblclick&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.cut``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;cut&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.cut(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;cut&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.copy``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;copy&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.copy(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;copy&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.contextMenu``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;contextmenu&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.contextMenu(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;contextmenu&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.compositionUpdate``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent,``0})">
<summary>
 Create a handler for the event &quot;compositionupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.compositionUpdate(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent})">
<summary>
 Create a handler for the event &quot;compositionupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.compositionStart``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent,``0})">
<summary>
 Create a handler for the event &quot;compositionstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.compositionStart(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent})">
<summary>
 Create a handler for the event &quot;compositionstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.compositionEnd``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent,``0})">
<summary>
 Create a handler for the event &quot;compositionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.compositionEnd(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.CompositionEvent})">
<summary>
 Create a handler for the event &quot;compositionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.complete``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;complete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.complete(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;complete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.close``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;close&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.close(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;close&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.click``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent,``0})">
<summary>
 Create a handler for the event &quot;click&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.click(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.MouseEvent})">
<summary>
 Create a handler for the event &quot;click&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.checking``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;checking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.checking(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;checking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.chargingTimeChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;chargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.chargingTimeChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;chargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.chargingChange``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;chargingchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.chargingChange(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;chargingchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.change``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;change&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.change(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;change&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.canPlayThrough``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;canplaythrough&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.canPlayThrough(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;canplaythrough&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.canPlay``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;canplay&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.canPlay(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;canplay&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.cached``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;cached&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.cached(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;cached&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.blur``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent,``0})">
<summary>
 Create a handler for the event &quot;blur&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.blur(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.FocusEvent})">
<summary>
 Create a handler for the event &quot;blur&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.blocked``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;blocked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.blocked(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;blocked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.beginEvent``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;beginEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.beginEvent(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;beginEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.beforeUnload``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;beforeunload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.beforeUnload(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;beforeunload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.beforePrint``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;beforeprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.beforePrint(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;beforeprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.audioProcess``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;audioprocess&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.audioProcess(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;audioprocess&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.animationStart``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;animationstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.animationStart(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;animationstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.animationIteration``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;animationiteration&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.animationIteration(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;animationiteration&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.animationEnd``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;animationend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.animationEnd(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;animationend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.afterPrint``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event,``0})">
<summary>
 Create a handler for the event &quot;afterprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.afterPrint(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Event})">
<summary>
 Create a handler for the event &quot;afterprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.abort``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent,``0})">
<summary>
 Create a handler for the event &quot;abort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.abort(System.Action{WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.UIEvent})">
<summary>
 Create a handler for the event &quot;abort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.viewUpdate``1(WebSharper.UI.Next.View{``0},System.Action{WebSharper.JavaScript.Dom.Element,``0})">
<summary>
 Adds a callback to be called every time the given view receives an updated value,
 iff the element is currently in the DOM.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.on.afterRender(System.Action{WebSharper.JavaScript.Dom.Element})">
<summary>
 Adds a callback to be called after the element has been inserted in the DOM.
 The callback is guaranteed to be called only once, even if the element is moved or removed and reinserted.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.wrap``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;wrap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.wrap(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `wrap v p` sets an HTML attribute &quot;wrap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.wrap(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;wrap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.wrap(System.String)">
<summary>
 Create an HTML attribute &quot;wrap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.width``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;width&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.width(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `width v p` sets an HTML attribute &quot;width&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.width(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;width&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.width(System.String)">
<summary>
 Create an HTML attribute &quot;width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vspace``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;vspace&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vspace(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `vspace v p` sets an HTML attribute &quot;vspace&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vspace(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;vspace&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vspace(System.String)">
<summary>
 Create an HTML attribute &quot;vspace&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vlink``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;vlink&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vlink(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `vlink v p` sets an HTML attribute &quot;vlink&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vlink(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;vlink&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.vlink(System.String)">
<summary>
 Create an HTML attribute &quot;vlink&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.version``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;version&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.version(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `version v p` sets an HTML attribute &quot;version&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.version(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;version&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.version(System.String)">
<summary>
 Create an HTML attribute &quot;version&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valuetype``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;valuetype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valuetype(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `valuetype v p` sets an HTML attribute &quot;valuetype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valuetype(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;valuetype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valuetype(System.String)">
<summary>
 Create an HTML attribute &quot;valuetype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.value``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;value&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.value(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `value v p` sets an HTML attribute &quot;value&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.value(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;value&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.value(System.String)">
<summary>
 Create an HTML attribute &quot;value&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valign``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;valign&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valign(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `valign v p` sets an HTML attribute &quot;valign&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valign(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;valign&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.valign(System.String)">
<summary>
 Create an HTML attribute &quot;valign&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.usemap``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;usemap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.usemap(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `usemap v p` sets an HTML attribute &quot;usemap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.usemap(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;usemap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.usemap(System.String)">
<summary>
 Create an HTML attribute &quot;usemap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.type``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;type&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.type(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `type v p` sets an HTML attribute &quot;type&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.type(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;type&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.type(System.String)">
<summary>
 Create an HTML attribute &quot;type&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.title``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;title&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.title(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `title v p` sets an HTML attribute &quot;title&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.title(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;title&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.title(System.String)">
<summary>
 Create an HTML attribute &quot;title&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.text``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;text&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.text(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `text v p` sets an HTML attribute &quot;text&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.text(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;text&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.text(System.String)">
<summary>
 Create an HTML attribute &quot;text&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.target``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;target&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.target(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `target v p` sets an HTML attribute &quot;target&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.target(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;target&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.target(System.String)">
<summary>
 Create an HTML attribute &quot;target&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.tabindex``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;tabindex&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.tabindex(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `tabindex v p` sets an HTML attribute &quot;tabindex&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.tabindex(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;tabindex&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.tabindex(System.String)">
<summary>
 Create an HTML attribute &quot;tabindex&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.summary``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;summary&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.summary(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `summary v p` sets an HTML attribute &quot;summary&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.summary(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;summary&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.summary(System.String)">
<summary>
 Create an HTML attribute &quot;summary&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.subject``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;subject&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.subject(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `subject v p` sets an HTML attribute &quot;subject&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.subject(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;subject&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.subject(System.String)">
<summary>
 Create an HTML attribute &quot;subject&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.style``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;style&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.style(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `style v p` sets an HTML attribute &quot;style&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.style(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;style&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.style(System.String)">
<summary>
 Create an HTML attribute &quot;style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.step``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;step&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.step(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `step v p` sets an HTML attribute &quot;step&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.step(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;step&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.step(System.String)">
<summary>
 Create an HTML attribute &quot;step&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.start``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;start&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.start(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `start v p` sets an HTML attribute &quot;start&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.start(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;start&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.start(System.String)">
<summary>
 Create an HTML attribute &quot;start&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.standby``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;standby&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.standby(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `standby v p` sets an HTML attribute &quot;standby&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.standby(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;standby&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.standby(System.String)">
<summary>
 Create an HTML attribute &quot;standby&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srclang``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;srclang&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srclang(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `srclang v p` sets an HTML attribute &quot;srclang&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srclang(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;srclang&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srclang(System.String)">
<summary>
 Create an HTML attribute &quot;srclang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srcdoc``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;srcdoc&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srcdoc(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `srcdoc v p` sets an HTML attribute &quot;srcdoc&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srcdoc(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;srcdoc&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.srcdoc(System.String)">
<summary>
 Create an HTML attribute &quot;srcdoc&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.src``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;src&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.src(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `src v p` sets an HTML attribute &quot;src&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.src(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;src&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.src(System.String)">
<summary>
 Create an HTML attribute &quot;src&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.spellcheck``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;spellcheck&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.spellcheck(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `spellcheck v p` sets an HTML attribute &quot;spellcheck&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.spellcheck(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;spellcheck&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.spellcheck(System.String)">
<summary>
 Create an HTML attribute &quot;spellcheck&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.span``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;span&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.span(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `span v p` sets an HTML attribute &quot;span&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.span(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;span&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.span(System.String)">
<summary>
 Create an HTML attribute &quot;span&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sizes``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;sizes&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sizes(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `sizes v p` sets an HTML attribute &quot;sizes&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sizes(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;sizes&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sizes(System.String)">
<summary>
 Create an HTML attribute &quot;sizes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.size``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;size&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.size(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `size v p` sets an HTML attribute &quot;size&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.size(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;size&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.size(System.String)">
<summary>
 Create an HTML attribute &quot;size&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.shape``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;shape&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.shape(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `shape v p` sets an HTML attribute &quot;shape&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.shape(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;shape&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.shape(System.String)">
<summary>
 Create an HTML attribute &quot;shape&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.selected``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;selected&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.selected(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `selected v p` sets an HTML attribute &quot;selected&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.selected(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;selected&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.selected(System.String)">
<summary>
 Create an HTML attribute &quot;selected&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.seamless``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;seamless&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.seamless(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `seamless v p` sets an HTML attribute &quot;seamless&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.seamless(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;seamless&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.seamless(System.String)">
<summary>
 Create an HTML attribute &quot;seamless&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scrolling``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scrolling&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scrolling(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scrolling v p` sets an HTML attribute &quot;scrolling&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scrolling(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scrolling&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scrolling(System.String)">
<summary>
 Create an HTML attribute &quot;scrolling&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scoped``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scoped&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scoped(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scoped v p` sets an HTML attribute &quot;scoped&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scoped(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scoped&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scoped(System.String)">
<summary>
 Create an HTML attribute &quot;scoped&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scope``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scope&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scope(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scope v p` sets an HTML attribute &quot;scope&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scope(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scope&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scope(System.String)">
<summary>
 Create an HTML attribute &quot;scope&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scheme``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scheme&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scheme(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scheme v p` sets an HTML attribute &quot;scheme&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scheme(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scheme&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.scheme(System.String)">
<summary>
 Create an HTML attribute &quot;scheme&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sandbox``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;sandbox&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sandbox(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `sandbox v p` sets an HTML attribute &quot;sandbox&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sandbox(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;sandbox&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.sandbox(System.String)">
<summary>
 Create an HTML attribute &quot;sandbox&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rules``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rules&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rules(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rules v p` sets an HTML attribute &quot;rules&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rules(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rules&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rules(System.String)">
<summary>
 Create an HTML attribute &quot;rules&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rowspan``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rowspan&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rowspan(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rowspan v p` sets an HTML attribute &quot;rowspan&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rowspan(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rowspan&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rowspan(System.String)">
<summary>
 Create an HTML attribute &quot;rowspan&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rows``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rows&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rows(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rows v p` sets an HTML attribute &quot;rows&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rows(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rows&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rows(System.String)">
<summary>
 Create an HTML attribute &quot;rows&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.reversed``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;reversed&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.reversed(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `reversed v p` sets an HTML attribute &quot;reversed&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.reversed(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;reversed&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.reversed(System.String)">
<summary>
 Create an HTML attribute &quot;reversed&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rev``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rev&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rev(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rev v p` sets an HTML attribute &quot;rev&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rev(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rev&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rev(System.String)">
<summary>
 Create an HTML attribute &quot;rev&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.required``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;required&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.required(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `required v p` sets an HTML attribute &quot;required&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.required(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;required&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.required(System.String)">
<summary>
 Create an HTML attribute &quot;required&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rel``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rel&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rel(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rel v p` sets an HTML attribute &quot;rel&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rel(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rel&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.rel(System.String)">
<summary>
 Create an HTML attribute &quot;rel&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.readonly``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;readonly&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.readonly(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `readonly v p` sets an HTML attribute &quot;readonly&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.readonly(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;readonly&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.readonly(System.String)">
<summary>
 Create an HTML attribute &quot;readonly&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.radiogroup``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;radiogroup&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.radiogroup(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `radiogroup v p` sets an HTML attribute &quot;radiogroup&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.radiogroup(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;radiogroup&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.radiogroup(System.String)">
<summary>
 Create an HTML attribute &quot;radiogroup&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pubdate``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;pubdate&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pubdate(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `pubdate v p` sets an HTML attribute &quot;pubdate&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pubdate(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;pubdate&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pubdate(System.String)">
<summary>
 Create an HTML attribute &quot;pubdate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.prompt``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;prompt&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.prompt(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `prompt v p` sets an HTML attribute &quot;prompt&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.prompt(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;prompt&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.prompt(System.String)">
<summary>
 Create an HTML attribute &quot;prompt&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.profile``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;profile&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.profile(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `profile v p` sets an HTML attribute &quot;profile&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.profile(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;profile&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.profile(System.String)">
<summary>
 Create an HTML attribute &quot;profile&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.preload``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;preload&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.preload(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `preload v p` sets an HTML attribute &quot;preload&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.preload(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;preload&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.preload(System.String)">
<summary>
 Create an HTML attribute &quot;preload&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.poster``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;poster&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.poster(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `poster v p` sets an HTML attribute &quot;poster&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.poster(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;poster&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.poster(System.String)">
<summary>
 Create an HTML attribute &quot;poster&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.placeholder``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;placeholder&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.placeholder(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `placeholder v p` sets an HTML attribute &quot;placeholder&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.placeholder(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;placeholder&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.placeholder(System.String)">
<summary>
 Create an HTML attribute &quot;placeholder&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ping``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;ping&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ping(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `ping v p` sets an HTML attribute &quot;ping&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ping(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;ping&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ping(System.String)">
<summary>
 Create an HTML attribute &quot;ping&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pattern``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;pattern&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pattern(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `pattern v p` sets an HTML attribute &quot;pattern&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pattern(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;pattern&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.pattern(System.String)">
<summary>
 Create an HTML attribute &quot;pattern&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.optimum``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;optimum&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.optimum(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `optimum v p` sets an HTML attribute &quot;optimum&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.optimum(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;optimum&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.optimum(System.String)">
<summary>
 Create an HTML attribute &quot;optimum&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.open``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;open&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.open(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `open v p` sets an HTML attribute &quot;open&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.open(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;open&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.open(System.String)">
<summary>
 Create an HTML attribute &quot;open&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.object``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;object&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.object(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `object v p` sets an HTML attribute &quot;object&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.object(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;object&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.object(System.String)">
<summary>
 Create an HTML attribute &quot;object&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nowrap``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;nowrap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nowrap(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `nowrap v p` sets an HTML attribute &quot;nowrap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nowrap(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;nowrap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nowrap(System.String)">
<summary>
 Create an HTML attribute &quot;nowrap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.novalidate``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;novalidate&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.novalidate(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `novalidate v p` sets an HTML attribute &quot;novalidate&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.novalidate(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;novalidate&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.novalidate(System.String)">
<summary>
 Create an HTML attribute &quot;novalidate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noshade``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;noshade&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noshade(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `noshade v p` sets an HTML attribute &quot;noshade&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noshade(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;noshade&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noshade(System.String)">
<summary>
 Create an HTML attribute &quot;noshade&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noresize``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;noresize&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noresize(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `noresize v p` sets an HTML attribute &quot;noresize&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noresize(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;noresize&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.noresize(System.String)">
<summary>
 Create an HTML attribute &quot;noresize&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nohref``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;nohref&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nohref(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `nohref v p` sets an HTML attribute &quot;nohref&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nohref(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;nohref&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.nohref(System.String)">
<summary>
 Create an HTML attribute &quot;nohref&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.name``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;name&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.name(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `name v p` sets an HTML attribute &quot;name&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.name(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;name&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.name(System.String)">
<summary>
 Create an HTML attribute &quot;name&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.multiple``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;multiple&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.multiple(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `multiple v p` sets an HTML attribute &quot;multiple&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.multiple(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;multiple&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.multiple(System.String)">
<summary>
 Create an HTML attribute &quot;multiple&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.min``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;min&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.min(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `min v p` sets an HTML attribute &quot;min&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.min(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;min&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.min(System.String)">
<summary>
 Create an HTML attribute &quot;min&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.method``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;method&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.method(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `method v p` sets an HTML attribute &quot;method&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.method(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;method&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.method(System.String)">
<summary>
 Create an HTML attribute &quot;method&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.media``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;media&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.media(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `media v p` sets an HTML attribute &quot;media&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.media(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;media&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.media(System.String)">
<summary>
 Create an HTML attribute &quot;media&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.maxlength``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;maxlength&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.maxlength(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `maxlength v p` sets an HTML attribute &quot;maxlength&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.maxlength(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;maxlength&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.maxlength(System.String)">
<summary>
 Create an HTML attribute &quot;maxlength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.max``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;max&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.max(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `max v p` sets an HTML attribute &quot;max&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.max(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;max&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.max(System.String)">
<summary>
 Create an HTML attribute &quot;max&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginwidth``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;marginwidth&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginwidth(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `marginwidth v p` sets an HTML attribute &quot;marginwidth&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginwidth(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;marginwidth&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginwidth(System.String)">
<summary>
 Create an HTML attribute &quot;marginwidth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginheight``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;marginheight&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginheight(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `marginheight v p` sets an HTML attribute &quot;marginheight&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginheight(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;marginheight&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.marginheight(System.String)">
<summary>
 Create an HTML attribute &quot;marginheight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.manifest``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;manifest&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.manifest(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `manifest v p` sets an HTML attribute &quot;manifest&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.manifest(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;manifest&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.manifest(System.String)">
<summary>
 Create an HTML attribute &quot;manifest&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.low``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;low&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.low(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `low v p` sets an HTML attribute &quot;low&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.low(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;low&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.low(System.String)">
<summary>
 Create an HTML attribute &quot;low&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.loop``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;loop&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.loop(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `loop v p` sets an HTML attribute &quot;loop&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.loop(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;loop&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.loop(System.String)">
<summary>
 Create an HTML attribute &quot;loop&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.longdesc``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;longdesc&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.longdesc(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `longdesc v p` sets an HTML attribute &quot;longdesc&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.longdesc(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;longdesc&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.longdesc(System.String)">
<summary>
 Create an HTML attribute &quot;longdesc&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.list``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;list&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.list(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `list v p` sets an HTML attribute &quot;list&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.list(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;list&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.list(System.String)">
<summary>
 Create an HTML attribute &quot;list&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.link``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;link&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.link(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `link v p` sets an HTML attribute &quot;link&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.link(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;link&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.link(System.String)">
<summary>
 Create an HTML attribute &quot;link&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.language``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;language&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.language(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `language v p` sets an HTML attribute &quot;language&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.language(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;language&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.language(System.String)">
<summary>
 Create an HTML attribute &quot;language&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.lang``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;lang&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.lang(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `lang v p` sets an HTML attribute &quot;lang&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.lang(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;lang&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.lang(System.String)">
<summary>
 Create an HTML attribute &quot;lang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.label``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;label&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.label(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `label v p` sets an HTML attribute &quot;label&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.label(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;label&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.label(System.String)">
<summary>
 Create an HTML attribute &quot;label&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.kind``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;kind&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.kind(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `kind v p` sets an HTML attribute &quot;kind&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.kind(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;kind&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.kind(System.String)">
<summary>
 Create an HTML attribute &quot;kind&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.keytype``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;keytype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.keytype(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `keytype v p` sets an HTML attribute &quot;keytype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.keytype(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;keytype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.keytype(System.String)">
<summary>
 Create an HTML attribute &quot;keytype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.itemprop``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;itemprop&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.itemprop(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `itemprop v p` sets an HTML attribute &quot;itemprop&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.itemprop(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;itemprop&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.itemprop(System.String)">
<summary>
 Create an HTML attribute &quot;itemprop&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ismap``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;ismap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ismap(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `ismap v p` sets an HTML attribute &quot;ismap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ismap(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;ismap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.ismap(System.String)">
<summary>
 Create an HTML attribute &quot;ismap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.id``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;id&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.id(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `id v p` sets an HTML attribute &quot;id&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.id(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;id&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.id(System.String)">
<summary>
 Create an HTML attribute &quot;id&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.icon``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;icon&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.icon(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `icon v p` sets an HTML attribute &quot;icon&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.icon(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;icon&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.icon(System.String)">
<summary>
 Create an HTML attribute &quot;icon&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.http``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;http&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.http(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `http v p` sets an HTML attribute &quot;http&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.http(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;http&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.http(System.String)">
<summary>
 Create an HTML attribute &quot;http&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hspace``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;hspace&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hspace(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `hspace v p` sets an HTML attribute &quot;hspace&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hspace(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;hspace&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hspace(System.String)">
<summary>
 Create an HTML attribute &quot;hspace&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hreflang``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;hreflang&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hreflang(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `hreflang v p` sets an HTML attribute &quot;hreflang&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hreflang(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;hreflang&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hreflang(System.String)">
<summary>
 Create an HTML attribute &quot;hreflang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.href``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;href&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.href(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `href v p` sets an HTML attribute &quot;href&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.href(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;href&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.href(System.String)">
<summary>
 Create an HTML attribute &quot;href&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.high``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;high&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.high(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `high v p` sets an HTML attribute &quot;high&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.high(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;high&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.high(System.String)">
<summary>
 Create an HTML attribute &quot;high&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hidden``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;hidden&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hidden(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `hidden v p` sets an HTML attribute &quot;hidden&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hidden(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;hidden&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.hidden(System.String)">
<summary>
 Create an HTML attribute &quot;hidden&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.height``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;height&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.height(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `height v p` sets an HTML attribute &quot;height&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.height(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;height&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.height(System.String)">
<summary>
 Create an HTML attribute &quot;height&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.headers``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;headers&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.headers(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `headers v p` sets an HTML attribute &quot;headers&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.headers(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;headers&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.headers(System.String)">
<summary>
 Create an HTML attribute &quot;headers&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frameborder``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;frameborder&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frameborder(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `frameborder v p` sets an HTML attribute &quot;frameborder&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frameborder(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;frameborder&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frameborder(System.String)">
<summary>
 Create an HTML attribute &quot;frameborder&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frame``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;frame&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frame(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `frame v p` sets an HTML attribute &quot;frame&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frame(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;frame&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.frame(System.String)">
<summary>
 Create an HTML attribute &quot;frame&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formtarget``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formtarget&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formtarget(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formtarget v p` sets an HTML attribute &quot;formtarget&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formtarget(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formtarget&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formtarget(System.String)">
<summary>
 Create an HTML attribute &quot;formtarget&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formnovalidate``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formnovalidate&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formnovalidate(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formnovalidate v p` sets an HTML attribute &quot;formnovalidate&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formnovalidate(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formnovalidate&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formnovalidate(System.String)">
<summary>
 Create an HTML attribute &quot;formnovalidate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formmethod``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formmethod&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formmethod(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formmethod v p` sets an HTML attribute &quot;formmethod&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formmethod(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formmethod&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formmethod(System.String)">
<summary>
 Create an HTML attribute &quot;formmethod&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formenctype``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formenctype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formenctype(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formenctype v p` sets an HTML attribute &quot;formenctype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formenctype(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formenctype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formenctype(System.String)">
<summary>
 Create an HTML attribute &quot;formenctype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formaction``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formaction&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formaction(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formaction v p` sets an HTML attribute &quot;formaction&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formaction(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formaction&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.formaction(System.String)">
<summary>
 Create an HTML attribute &quot;formaction&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.form``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;form&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.form(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `form v p` sets an HTML attribute &quot;form&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.form(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;form&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.form(System.String)">
<summary>
 Create an HTML attribute &quot;form&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.for``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;for&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.for(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `for v p` sets an HTML attribute &quot;for&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.for(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;for&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.for(System.String)">
<summary>
 Create an HTML attribute &quot;for&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.face``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;face&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.face(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `face v p` sets an HTML attribute &quot;face&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.face(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;face&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.face(System.String)">
<summary>
 Create an HTML attribute &quot;face&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.enctype``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;enctype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.enctype(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `enctype v p` sets an HTML attribute &quot;enctype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.enctype(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;enctype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.enctype(System.String)">
<summary>
 Create an HTML attribute &quot;enctype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dropzone``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;dropzone&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dropzone(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `dropzone v p` sets an HTML attribute &quot;dropzone&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dropzone(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;dropzone&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dropzone(System.String)">
<summary>
 Create an HTML attribute &quot;dropzone&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.draggable``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;draggable&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.draggable(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `draggable v p` sets an HTML attribute &quot;draggable&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.draggable(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;draggable&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.draggable(System.String)">
<summary>
 Create an HTML attribute &quot;draggable&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.download``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;download&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.download(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `download v p` sets an HTML attribute &quot;download&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.download(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;download&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.download(System.String)">
<summary>
 Create an HTML attribute &quot;download&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.disabled``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;disabled&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.disabled(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `disabled v p` sets an HTML attribute &quot;disabled&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.disabled(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;disabled&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.disabled(System.String)">
<summary>
 Create an HTML attribute &quot;disabled&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dir``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;dir&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dir(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `dir v p` sets an HTML attribute &quot;dir&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dir(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;dir&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dir(System.String)">
<summary>
 Create an HTML attribute &quot;dir&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.defer``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;defer&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.defer(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `defer v p` sets an HTML attribute &quot;defer&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.defer(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;defer&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.defer(System.String)">
<summary>
 Create an HTML attribute &quot;defer&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.default``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;default&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.default(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `default v p` sets an HTML attribute &quot;default&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.default(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;default&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.default(System.String)">
<summary>
 Create an HTML attribute &quot;default&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.declare``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;declare&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.declare(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `declare v p` sets an HTML attribute &quot;declare&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.declare(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;declare&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.declare(System.String)">
<summary>
 Create an HTML attribute &quot;declare&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.datetime``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;datetime&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.datetime(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `datetime v p` sets an HTML attribute &quot;datetime&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.datetime(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;datetime&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.datetime(System.String)">
<summary>
 Create an HTML attribute &quot;datetime&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.data``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;data&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.data(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `data v p` sets an HTML attribute &quot;data&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.data(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;data&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.data(System.String)">
<summary>
 Create an HTML attribute &quot;data&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.coords``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;coords&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.coords(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `coords v p` sets an HTML attribute &quot;coords&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.coords(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;coords&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.coords(System.String)">
<summary>
 Create an HTML attribute &quot;coords&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.controls``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;controls&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.controls(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `controls v p` sets an HTML attribute &quot;controls&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.controls(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;controls&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.controls(System.String)">
<summary>
 Create an HTML attribute &quot;controls&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contextmenu``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;contextmenu&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contextmenu(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `contextmenu v p` sets an HTML attribute &quot;contextmenu&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contextmenu(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;contextmenu&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contextmenu(System.String)">
<summary>
 Create an HTML attribute &quot;contextmenu&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contenteditable``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;contenteditable&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contenteditable(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `contenteditable v p` sets an HTML attribute &quot;contenteditable&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contenteditable(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;contenteditable&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.contenteditable(System.String)">
<summary>
 Create an HTML attribute &quot;contenteditable&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.content``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;content&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.content(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `content v p` sets an HTML attribute &quot;content&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.content(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;content&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.content(System.String)">
<summary>
 Create an HTML attribute &quot;content&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.compact``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;compact&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.compact(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `compact v p` sets an HTML attribute &quot;compact&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.compact(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;compact&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.compact(System.String)">
<summary>
 Create an HTML attribute &quot;compact&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.colspan``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;colspan&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.colspan(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `colspan v p` sets an HTML attribute &quot;colspan&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.colspan(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;colspan&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.colspan(System.String)">
<summary>
 Create an HTML attribute &quot;colspan&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cols``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cols&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cols(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cols v p` sets an HTML attribute &quot;cols&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cols(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cols&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cols(System.String)">
<summary>
 Create an HTML attribute &quot;cols&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.color``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;color&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.color(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `color v p` sets an HTML attribute &quot;color&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.color(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;color&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.color(System.String)">
<summary>
 Create an HTML attribute &quot;color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codetype``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;codetype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codetype(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `codetype v p` sets an HTML attribute &quot;codetype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codetype(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;codetype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codetype(System.String)">
<summary>
 Create an HTML attribute &quot;codetype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codebase``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;codebase&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codebase(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `codebase v p` sets an HTML attribute &quot;codebase&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codebase(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;codebase&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.codebase(System.String)">
<summary>
 Create an HTML attribute &quot;codebase&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.code``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;code&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.code(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `code v p` sets an HTML attribute &quot;code&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.code(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;code&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.code(System.String)">
<summary>
 Create an HTML attribute &quot;code&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.clear``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;clear&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.clear(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `clear v p` sets an HTML attribute &quot;clear&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.clear(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;clear&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.clear(System.String)">
<summary>
 Create an HTML attribute &quot;clear&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.classid``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;classid&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.classid(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `classid v p` sets an HTML attribute &quot;classid&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.classid(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;classid&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.classid(System.String)">
<summary>
 Create an HTML attribute &quot;classid&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.class``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;class&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.class(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `class v p` sets an HTML attribute &quot;class&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.class(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;class&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.class(System.String)">
<summary>
 Create an HTML attribute &quot;class&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cite``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cite&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cite(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cite v p` sets an HTML attribute &quot;cite&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cite(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cite&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cite(System.String)">
<summary>
 Create an HTML attribute &quot;cite&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.checked``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;checked&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.checked(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `checked v p` sets an HTML attribute &quot;checked&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.checked(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;checked&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.checked(System.String)">
<summary>
 Create an HTML attribute &quot;checked&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charset``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;charset&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charset(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `charset v p` sets an HTML attribute &quot;charset&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charset(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;charset&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charset(System.String)">
<summary>
 Create an HTML attribute &quot;charset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charoff``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;charoff&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charoff(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `charoff v p` sets an HTML attribute &quot;charoff&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charoff(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;charoff&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.charoff(System.String)">
<summary>
 Create an HTML attribute &quot;charoff&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.char``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;char&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.char(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `char v p` sets an HTML attribute &quot;char&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.char(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;char&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.char(System.String)">
<summary>
 Create an HTML attribute &quot;char&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.challenge``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;challenge&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.challenge(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `challenge v p` sets an HTML attribute &quot;challenge&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.challenge(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;challenge&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.challenge(System.String)">
<summary>
 Create an HTML attribute &quot;challenge&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellspacing``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cellspacing&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellspacing(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cellspacing v p` sets an HTML attribute &quot;cellspacing&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellspacing(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cellspacing&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellspacing(System.String)">
<summary>
 Create an HTML attribute &quot;cellspacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellpadding``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cellpadding&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellpadding(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cellpadding v p` sets an HTML attribute &quot;cellpadding&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellpadding(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cellpadding&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.cellpadding(System.String)">
<summary>
 Create an HTML attribute &quot;cellpadding&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.buffered``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;buffered&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.buffered(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `buffered v p` sets an HTML attribute &quot;buffered&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.buffered(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;buffered&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.buffered(System.String)">
<summary>
 Create an HTML attribute &quot;buffered&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bordercolor``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;bordercolor&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bordercolor(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `bordercolor v p` sets an HTML attribute &quot;bordercolor&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bordercolor(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;bordercolor&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bordercolor(System.String)">
<summary>
 Create an HTML attribute &quot;bordercolor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.border``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;border&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.border(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `border v p` sets an HTML attribute &quot;border&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.border(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;border&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.border(System.String)">
<summary>
 Create an HTML attribute &quot;border&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bgcolor``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;bgcolor&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bgcolor(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `bgcolor v p` sets an HTML attribute &quot;bgcolor&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bgcolor(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;bgcolor&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.bgcolor(System.String)">
<summary>
 Create an HTML attribute &quot;bgcolor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.background``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;background&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.background(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `background v p` sets an HTML attribute &quot;background&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.background(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;background&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.background(System.String)">
<summary>
 Create an HTML attribute &quot;background&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.axis``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;axis&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.axis(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `axis v p` sets an HTML attribute &quot;axis&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.axis(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;axis&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.axis(System.String)">
<summary>
 Create an HTML attribute &quot;axis&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autosave``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autosave&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autosave(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autosave v p` sets an HTML attribute &quot;autosave&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autosave(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autosave&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autosave(System.String)">
<summary>
 Create an HTML attribute &quot;autosave&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autoplay``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autoplay&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autoplay(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autoplay v p` sets an HTML attribute &quot;autoplay&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autoplay(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autoplay&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autoplay(System.String)">
<summary>
 Create an HTML attribute &quot;autoplay&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autofocus``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autofocus&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autofocus(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autofocus v p` sets an HTML attribute &quot;autofocus&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autofocus(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autofocus&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autofocus(System.String)">
<summary>
 Create an HTML attribute &quot;autofocus&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autocomplete``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autocomplete&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autocomplete(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autocomplete v p` sets an HTML attribute &quot;autocomplete&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autocomplete(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autocomplete&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.autocomplete(System.String)">
<summary>
 Create an HTML attribute &quot;autocomplete&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.async``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;async&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.async(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `async v p` sets an HTML attribute &quot;async&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.async(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;async&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.async(System.String)">
<summary>
 Create an HTML attribute &quot;async&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.archive``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;archive&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.archive(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `archive v p` sets an HTML attribute &quot;archive&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.archive(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;archive&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.archive(System.String)">
<summary>
 Create an HTML attribute &quot;archive&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.altcode``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;altcode&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.altcode(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `altcode v p` sets an HTML attribute &quot;altcode&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.altcode(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;altcode&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.altcode(System.String)">
<summary>
 Create an HTML attribute &quot;altcode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alt``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;alt&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alt(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `alt v p` sets an HTML attribute &quot;alt&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alt(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;alt&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alt(System.String)">
<summary>
 Create an HTML attribute &quot;alt&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alink``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;alink&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alink(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `alink v p` sets an HTML attribute &quot;alink&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alink(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;alink&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.alink(System.String)">
<summary>
 Create an HTML attribute &quot;alink&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.align``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;align&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.align(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `align v p` sets an HTML attribute &quot;align&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.align(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;align&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.align(System.String)">
<summary>
 Create an HTML attribute &quot;align&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.action``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;action&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.action(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `action v p` sets an HTML attribute &quot;action&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.action(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;action&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.action(System.String)">
<summary>
 Create an HTML attribute &quot;action&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accesskey``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;accesskey&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accesskey(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `accesskey v p` sets an HTML attribute &quot;accesskey&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accesskey(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;accesskey&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accesskey(System.String)">
<summary>
 Create an HTML attribute &quot;accesskey&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.acceptCharset``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;accept-charset&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.acceptCharset(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `acceptCharset v p` sets an HTML attribute &quot;accept-charset&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.acceptCharset(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;accept-charset&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.acceptCharset(System.String)">
<summary>
 Create an HTML attribute &quot;accept-charset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accept``1(WebSharper.UI.Next.View{``0},System.Converter{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;accept&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accept(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `accept v p` sets an HTML attribute &quot;accept&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accept(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;accept&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.accept(System.String)">
<summary>
 Create an HTML attribute &quot;accept&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dataAnim-``1(System.String,WebSharper.UI.Next.View{``0},System.Func{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;data-name&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dataDynPred-(System.String,WebSharper.UI.Next.View{System.Boolean},WebSharper.UI.Next.View{System.String})">
<summary>
 `dataDynPred- p v` sets an HTML attribute &quot;data-name&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.dataDyn-(System.String,WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;data-name&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.data-(System.String,System.String)">
<summary>
 Create an HTML attribute &quot;data-name&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.attr.class``1(System.String,WebSharper.UI.Next.View{``0},System.Predicate{``0})">
<summary>
 Create an animated HTML attribute &quot;class&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.vkern(System.Object[])">
<summary>
 Create an SVG element &lt;vkern&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.view(System.Object[])">
<summary>
 Create an SVG element &lt;view&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.use(System.Object[])">
<summary>
 Create an SVG element &lt;use&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.tspan(System.Object[])">
<summary>
 Create an SVG element &lt;tspan&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.tref(System.Object[])">
<summary>
 Create an SVG element &lt;tref&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.title(System.Object[])">
<summary>
 Create an SVG element &lt;title&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.textpath(System.Object[])">
<summary>
 Create an SVG element &lt;textpath&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.text(System.Object[])">
<summary>
 Create an SVG element &lt;text&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.symbol(System.Object[])">
<summary>
 Create an SVG element &lt;symbol&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.switch(System.Object[])">
<summary>
 Create an SVG element &lt;switch&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.svg(System.Object[])">
<summary>
 Create an SVG element &lt;svg&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.style(System.Object[])">
<summary>
 Create an SVG element &lt;style&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.stop(System.Object[])">
<summary>
 Create an SVG element &lt;stop&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.set(System.Object[])">
<summary>
 Create an SVG element &lt;set&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.script(System.Object[])">
<summary>
 Create an SVG element &lt;script&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.rect(System.Object[])">
<summary>
 Create an SVG element &lt;rect&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.radialgradient(System.Object[])">
<summary>
 Create an SVG element &lt;radialgradient&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.polyline(System.Object[])">
<summary>
 Create an SVG element &lt;polyline&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.polygon(System.Object[])">
<summary>
 Create an SVG element &lt;polygon&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.pattern(System.Object[])">
<summary>
 Create an SVG element &lt;pattern&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.path(System.Object[])">
<summary>
 Create an SVG element &lt;path&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.mpath(System.Object[])">
<summary>
 Create an SVG element &lt;mpath&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.missingGlyph(System.Object[])">
<summary>
 Create an SVG element &lt;missing-glyph&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.metadata(System.Object[])">
<summary>
 Create an SVG element &lt;metadata&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.mask(System.Object[])">
<summary>
 Create an SVG element &lt;mask&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.marker(System.Object[])">
<summary>
 Create an SVG element &lt;marker&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.lineargradient(System.Object[])">
<summary>
 Create an SVG element &lt;lineargradient&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.line(System.Object[])">
<summary>
 Create an SVG element &lt;line&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.image(System.Object[])">
<summary>
 Create an SVG element &lt;image&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.hkern(System.Object[])">
<summary>
 Create an SVG element &lt;hkern&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.glyphref(System.Object[])">
<summary>
 Create an SVG element &lt;glyphref&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.glyph(System.Object[])">
<summary>
 Create an SVG element &lt;glyph&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.g(System.Object[])">
<summary>
 Create an SVG element &lt;g&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.foreignobject(System.Object[])">
<summary>
 Create an SVG element &lt;foreignobject&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fontFaceUri(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-uri&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fontFaceSrc(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-src&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fontFaceName(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-name&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fontFaceFormat(System.Object[])">
<summary>
 Create an SVG element &lt;font-face-format&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fontFace(System.Object[])">
<summary>
 Create an SVG element &lt;font-face&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.font(System.Object[])">
<summary>
 Create an SVG element &lt;font&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.filter(System.Object[])">
<summary>
 Create an SVG element &lt;filter&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.feturbulence(System.Object[])">
<summary>
 Create an SVG element &lt;feturbulence&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fetile(System.Object[])">
<summary>
 Create an SVG element &lt;fetile&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fespotlight(System.Object[])">
<summary>
 Create an SVG element &lt;fespotlight&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fespecularlighting(System.Object[])">
<summary>
 Create an SVG element &lt;fespecularlighting&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fepointlight(System.Object[])">
<summary>
 Create an SVG element &lt;fepointlight&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.feoffset(System.Object[])">
<summary>
 Create an SVG element &lt;feoffset&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.femorphology(System.Object[])">
<summary>
 Create an SVG element &lt;femorphology&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.femergenode(System.Object[])">
<summary>
 Create an SVG element &lt;femergenode&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.femerge(System.Object[])">
<summary>
 Create an SVG element &lt;femerge&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.feimage(System.Object[])">
<summary>
 Create an SVG element &lt;feimage&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fegaussianblur(System.Object[])">
<summary>
 Create an SVG element &lt;fegaussianblur&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fefuncr(System.Object[])">
<summary>
 Create an SVG element &lt;fefuncr&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fefuncg(System.Object[])">
<summary>
 Create an SVG element &lt;fefuncg&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fefuncb(System.Object[])">
<summary>
 Create an SVG element &lt;fefuncb&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fefunca(System.Object[])">
<summary>
 Create an SVG element &lt;fefunca&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.feflood(System.Object[])">
<summary>
 Create an SVG element &lt;feflood&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fedistantlight(System.Object[])">
<summary>
 Create an SVG element &lt;fedistantlight&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fedisplacementmap(System.Object[])">
<summary>
 Create an SVG element &lt;fedisplacementmap&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fediffuselighting(System.Object[])">
<summary>
 Create an SVG element &lt;fediffuselighting&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.feconvolvematrix(System.Object[])">
<summary>
 Create an SVG element &lt;feconvolvematrix&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fecomposite(System.Object[])">
<summary>
 Create an SVG element &lt;fecomposite&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fecomponenttransfer(System.Object[])">
<summary>
 Create an SVG element &lt;fecomponenttransfer&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.fecolormatrix(System.Object[])">
<summary>
 Create an SVG element &lt;fecolormatrix&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.feblend(System.Object[])">
<summary>
 Create an SVG element &lt;feblend&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.ellipse(System.Object[])">
<summary>
 Create an SVG element &lt;ellipse&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.desc(System.Object[])">
<summary>
 Create an SVG element &lt;desc&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.defs(System.Object[])">
<summary>
 Create an SVG element &lt;defs&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.cursor(System.Object[])">
<summary>
 Create an SVG element &lt;cursor&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.colorProfile(System.Object[])">
<summary>
 Create an SVG element &lt;color-profile&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.clippath(System.Object[])">
<summary>
 Create an SVG element &lt;clippath&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.circle(System.Object[])">
<summary>
 Create an SVG element &lt;circle&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.animatetransform(System.Object[])">
<summary>
 Create an SVG element &lt;animatetransform&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.animatemotion(System.Object[])">
<summary>
 Create an SVG element &lt;animatemotion&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.animatecolor(System.Object[])">
<summary>
 Create an SVG element &lt;animatecolor&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.animate(System.Object[])">
<summary>
 Create an SVG element &lt;animate&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.altglyphitem(System.Object[])">
<summary>
 Create an SVG element &lt;altglyphitem&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.altglyphdef(System.Object[])">
<summary>
 Create an SVG element &lt;altglyphdef&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.altglyph(System.Object[])">
<summary>
 Create an SVG element &lt;altglyph&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.SvgElements.a(System.Object[])">
<summary>
 Create an SVG element &lt;a&gt; with children nodes.
</summary>
</member>
<member name="T:WebSharper.UI.Next.CSharp.Client.Html.SvgElements">
<summary>
 SVG elements.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.var(System.Object[])">
<summary>
 Create an HTML element &lt;var&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.u(System.Object[])">
<summary>
 Create an HTML element &lt;u&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.tt(System.Object[])">
<summary>
 Create an HTML element &lt;tt&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.title(System.Object[])">
<summary>
 Create an HTML element &lt;title&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.template(System.Object[])">
<summary>
 Create an HTML element &lt;template&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.style(System.Object[])">
<summary>
 Create an HTML element &lt;style&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.strike(System.Object[])">
<summary>
 Create an HTML element &lt;strike&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.s(System.Object[])">
<summary>
 Create an HTML element &lt;s&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.option(System.Object[])">
<summary>
 Create an HTML element &lt;option&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.object(System.Object[])">
<summary>
 Create an HTML element &lt;object&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.menuitem(System.Object[])">
<summary>
 Create an HTML element &lt;menuitem&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.menu(System.Object[])">
<summary>
 Create an HTML element &lt;menu&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.map(System.Object[])">
<summary>
 Create an HTML element &lt;map&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.main(System.Object[])">
<summary>
 Create an HTML element &lt;main&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.isindex(System.Object[])">
<summary>
 Create an HTML element &lt;isindex&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.frameset(System.Object[])">
<summary>
 Create an HTML element &lt;frameset&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.frame(System.Object[])">
<summary>
 Create an HTML element &lt;frame&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.font(System.Object[])">
<summary>
 Create an HTML element &lt;font&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.dir(System.Object[])">
<summary>
 Create an HTML element &lt;dir&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.data(System.Object[])">
<summary>
 Create an HTML element &lt;data&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.content(System.Object[])">
<summary>
 Create an HTML element &lt;content&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.center(System.Object[])">
<summary>
 Create an HTML element &lt;center&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.big(System.Object[])">
<summary>
 Create an HTML element &lt;big&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.basefont(System.Object[])">
<summary>
 Create an HTML element &lt;basefont&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.applet(System.Object[])">
<summary>
 Create an HTML element &lt;applet&gt; with children nodes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.CSharp.Client.Html.Tags.acronym(System.Object[])">
<summary>
 Create an HTML element &lt;acronym&gt; with children nodes.
</summary>
</member>
<member name="T:WebSharper.UI.Next.CSharp.Client.Html.Tags">
<summary>
 Additional and deprecated HTML5 element functions.
</summary>
</member>
</members>
</doc>
