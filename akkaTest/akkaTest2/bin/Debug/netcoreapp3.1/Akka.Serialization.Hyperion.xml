<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Akka.Serialization.Hyperion</name>
    </assembly>
    <members>
        <member name="T:Akka.Serialization.HyperionSerializer">
            <summary>
            This is a special <see cref="T:Akka.Serialization.Serializer"/> that serializes and deserializes plain old CLR objects (POCOs).
            </summary>
        </member>
        <member name="F:Akka.Serialization.HyperionSerializer.Settings">
            <summary>
            Settings used for an underlying Hyperion serializer implementation.
            </summary>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializer.#ctor(Akka.Actor.ExtendedActorSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Akka.Serialization.HyperionSerializer"/> class.
            </summary>
            <param name="system">The actor system to associate with this serializer.</param>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializer.#ctor(Akka.Actor.ExtendedActorSystem,Akka.Configuration.Config)">
            <summary>
            Initializes a new instance of the <see cref="T:Akka.Serialization.HyperionSerializer"/> class.
            </summary>
            <param name="system">The actor system to associate with this serializer.</param>
            <param name="config">Configuration passed from related HOCON config path.</param>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializer.#ctor(Akka.Actor.ExtendedActorSystem,Akka.Serialization.HyperionSerializerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Akka.Serialization.HyperionSerializer"/> class.
            </summary>
            <param name="system">The actor system to associate with this serializer.</param>
            <param name="settings">Serializer settings.</param>
        </member>
        <member name="P:Akka.Serialization.HyperionSerializer.Identifier">
            <summary>
            Completely unique value to identify this implementation of Serializer, used to optimize network traffic
            </summary>
        </member>
        <member name="P:Akka.Serialization.HyperionSerializer.IncludeManifest">
            <summary>
            Returns whether this serializer needs a manifest in the fromBinary method
            </summary>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializer.ToBinary(System.Object)">
            <summary>
            Serializes the given object into a byte array
            </summary>
            <param name="obj">The object to serialize</param>
            <returns>A byte array containing the serialized object </returns>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializer.FromBinary(System.Byte[],System.Type)">
            <summary>
            Deserializes a byte array into an object of type <paramref name="type" />.
            </summary>
            <param name="bytes">The array containing the serialized object</param>
            <param name="type">The type of object contained in the array</param>
            <returns>The object contained in the array</returns>
        </member>
        <member name="T:Akka.Serialization.HyperionSerializerSettings">
            <summary>
            A typed settings class for a <see cref="T:Akka.Serialization.HyperionSerializer"/>.
            </summary>
        </member>
        <member name="F:Akka.Serialization.HyperionSerializerSettings.Default">
            <summary>
            Default settings used by <see cref="T:Akka.Serialization.HyperionSerializer"/> when no config has been specified.
            </summary>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializerSettings.Create(Akka.Configuration.Config)">
            <summary>
            Creates a new instance of <see cref="T:Akka.Serialization.HyperionSerializerSettings"/> using provided HOCON config.
            Config can contain several key-values, that are mapped to a class fields:
            <ul>
            <li>`preserve-object-references` (boolean) mapped to <see cref="F:Akka.Serialization.HyperionSerializerSettings.PreserveObjectReferences"/></li>
            <li>`version-tolerance` (boolean) mapped to <see cref="F:Akka.Serialization.HyperionSerializerSettings.VersionTolerance"/></li>
            <li>`known-types-provider` (fully qualified type name) mapped to <see cref="F:Akka.Serialization.HyperionSerializerSettings.KnownTypesProvider"/></li>
            </ul>
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when <paramref name="config"/> was not provided.</exception>
            <exception cref="T:System.ArgumentException">Raised when `known-types-provider` type doesn't implement <see cref="T:Akka.Serialization.IKnownTypesProvider"/> interface.</exception>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="F:Akka.Serialization.HyperionSerializerSettings.PreserveObjectReferences">
            <summary>
            When true, it tells <see cref="T:Akka.Serialization.HyperionSerializer"/> to keep
            track of references in serialized/deserialized object graph.
            </summary>
        </member>
        <member name="F:Akka.Serialization.HyperionSerializerSettings.VersionTolerance">
            <summary>
            When true, it tells <see cref="T:Akka.Serialization.HyperionSerializer"/> to encode
            a list of currently serialized fields into type manifest.
            </summary>
        </member>
        <member name="F:Akka.Serialization.HyperionSerializerSettings.KnownTypesProvider">
            <summary>
            A type implementing <see cref="T:Akka.Serialization.IKnownTypesProvider"/>, that will
            be used when <see cref="T:Akka.Serialization.HyperionSerializer"/> is being constructed
            to provide a list of message types that are supposed to be known
            implicitly by all communicating parties. Implementing class must
            provide either a default constructor or a constructor taking
            <see cref="T:Akka.Actor.ExtendedActorSystem"/> as its only parameter.
            </summary>
        </member>
        <member name="M:Akka.Serialization.HyperionSerializerSettings.#ctor(System.Boolean,System.Boolean,System.Type)">
            <summary>
            Creates a new instance of a <see cref="T:Akka.Serialization.HyperionSerializerSettings"/>.
            </summary>
            <param name="preserveObjectReferences">Flag which determines if serializer should keep track of references in serialized object graph.</param>
            <param name="versionTolerance">Flag which determines if field data should be serialized as part of type manifest.</param>
            <param name="knownTypesProvider">Type implementing <see cref="T:Akka.Serialization.IKnownTypesProvider"/> to be used to determine a list of types implicitly known by all cooperating serializer.</param>
            <exception cref="T:System.ArgumentException">Raised when `known-types-provider` type doesn't implement <see cref="T:Akka.Serialization.IKnownTypesProvider"/> interface.</exception>
        </member>
        <member name="T:Akka.Serialization.IKnownTypesProvider">
            <summary>
            Interface that can be implemented in order to determine some 
            custom logic, that's going to provide a list of types that 
            are known to be shared for all corresponding parties during 
            remote communication.
            </summary>
        </member>
    </members>
</doc>
